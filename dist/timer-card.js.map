{"version":3,"file":"timer-card.js","sources":["../node_modules/@lit/reactive-element/css-tag.js","../node_modules/@lit/reactive-element/reactive-element.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-element/lit-element.js","../src/timer-card.ts","../src/timer-card-editor.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.0\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","// timer-card.ts\r\n\r\nimport { LitElement, html, css } from 'lit';\r\n\r\n// Ensure HomeAssistant and TimerCardConfig are recognized from global.d.ts\r\n\r\nconst DOMAIN = \"simple_timer\";\r\nconst CARD_VERSION = \"1.0.0\";\r\n\r\nconsole.info(\r\n  `%c TIMER-CARD %c v${CARD_VERSION} `,\r\n  'color: orange; font-weight: bold; background: black',\r\n  'color: white; font-weight: bold; background: dimgray',\r\n);\r\n\r\nclass TimerCard extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      hass: { type: Object },\r\n      _config: { type: Object },\r\n      _timeRemaining: { state: true },\r\n      _entitiesLoaded: { state: true },\r\n      _effectiveSwitchEntity: { state: true },\r\n      _effectiveSensorEntity: { state: true },\r\n    };\r\n  }\r\n\r\n  hass?: HomeAssistant;\r\n  _config?: TimerCardConfig;\r\n\r\n  _countdownInterval: number | null = null;\r\n  _liveRuntimeSeconds: number = 0;\r\n\r\n  _timeRemaining: string | null = null;\r\n\r\n  buttons: number[] = [];\r\n  _validationMessage: string | null = null;\r\n  _notificationSentForCurrentCycle: boolean = false;\r\n  _entitiesLoaded: boolean = false;\r\n\r\n  _effectiveSwitchEntity: string | null = null;\r\n  _effectiveSensorEntity: string | null = null;\r\n\r\n  static async getConfigElement(): Promise<HTMLElement> {\r\n    await import(\"./timer-card-editor.js\");\r\n    return document.createElement(\"timer-card-editor\");\r\n  }\r\n\r\n  static getStubConfig(hass: HomeAssistant): TimerCardConfig {\r\n    console.log(\"TimerCard: Generating stub config with hass object:\", hass);\r\n    let initialInstanceId: string | null = null;\r\n\r\n    // Find the first timer control sensor and use its entry_id\r\n    for (const entityId of Object.keys(hass.states)) {\r\n        const state = hass.states[entityId];\r\n        if (entityId.startsWith(\"sensor.\") && \r\n            typeof state.attributes.entry_id === 'string' && \r\n            typeof state.attributes.switch_entity_id === 'string') {\r\n            initialInstanceId = state.attributes.entry_id; // Use entry_id, not entity_id\r\n            console.info(`TimerCard: getStubConfig auto-selected first instance: '${initialInstanceId}' from sensor '${entityId}'`);\r\n            break;\r\n        }\r\n    }\r\n\r\n    return {\r\n      type: \"custom:timer-card\",\r\n      timer_instance_id: initialInstanceId, // This will now be explicitly set\r\n      timer_buttons: [15, 30, 60, 90, 120, 150],\r\n      card_title: \"Simple Timer\"\r\n    };\r\n  }\r\n\r\n  setConfig(cfg: TimerCardConfig): void {\r\n    this._config = {\r\n      type: cfg.type || \"custom:timer-card\",\r\n      timer_buttons: Array.isArray(cfg.timer_buttons) ? [...cfg.timer_buttons] : [15, 30, 60, 90, 120, 150],\r\n      card_title: cfg.card_title || null\r\n    };\r\n\r\n    if (cfg.timer_instance_id) {\r\n        this._config.timer_instance_id = cfg.timer_instance_id;\r\n    }\r\n    if (cfg.entity) {\r\n        this._config.entity = cfg.entity;\r\n    }\r\n    if (cfg.sensor_entity) {\r\n        this._config.sensor_entity = cfg.sensor_entity;\r\n    }\r\n    if (cfg.notification_entity) {\r\n        this._config.notification_entity = cfg.notification_entity;\r\n    }\r\n\r\n    let validatedTimerButtons: number[] = [];\r\n    this._validationMessage = null;\r\n\r\n    if (Array.isArray(this._config.timer_buttons)) {\r\n        const invalidValues: any[] = [];\r\n        this._config.timer_buttons.forEach(val => {\r\n            const numVal = Number(val);\r\n            if (Number.isInteger(numVal) && numVal > 0 && numVal <= 1000) {\r\n                validatedTimerButtons.push(numVal);\r\n            } else {\r\n                invalidValues.push(val);\r\n            }\r\n        });\r\n\r\n        if (invalidValues.length > 0) {\r\n            this._validationMessage = `Invalid timer values ignored: ${invalidValues.join(', ')}. Only positive integers up to 1000 are allowed.`;\r\n        }\r\n        validatedTimerButtons.sort((a, b) => a - b);\r\n    } else {\r\n        validatedTimerButtons = [15, 30, 45, 60, 90, 120, 150];\r\n    }\r\n    this.buttons = validatedTimerButtons;\r\n    \r\n    this._liveRuntimeSeconds = 0;\r\n    this._notificationSentForCurrentCycle = false;\r\n\r\n    this._effectiveSwitchEntity = null;\r\n    this._effectiveSensorEntity = null;\r\n    this._entitiesLoaded = false;\r\n    console.log(`TimerCard: setConfig completed. Configured instance ID: ${this._config.timer_instance_id}`);\r\n  }\r\n\r\n  _determineEffectiveEntities(): void {\r\n    let currentSwitch: string | null = null;\r\n    let currentSensor: string | null = null;\r\n    let entitiesAreValid = false;\r\n\r\n    if (!this.hass || !this.hass.states) {\r\n        this._entitiesLoaded = false;\r\n        return;\r\n    }\r\n\r\n    if (this._config?.timer_instance_id) {\r\n        const targetEntryId = this._config.timer_instance_id;\r\n        const allSensors = Object.keys(this.hass.states).filter(entityId => entityId.startsWith('sensor.'));\r\n        const instanceSensor = allSensors.find(entityId => {\r\n            const state = this.hass!.states[entityId];\r\n            return state.attributes.entry_id === targetEntryId &&\r\n                   typeof state.attributes.switch_entity_id === 'string';\r\n        });\r\n\r\n        if (instanceSensor) {\r\n            const sensorState = this.hass.states[instanceSensor];\r\n            currentSensor = instanceSensor;\r\n            currentSwitch = sensorState.attributes.switch_entity_id as string | null;\r\n\r\n            if (currentSwitch && this.hass.states[currentSwitch]) {\r\n                entitiesAreValid = true;\r\n            } else {\r\n                console.warn(`TimerCard: Configured instance '${targetEntryId}' sensor '${currentSensor}' links to missing or invalid switch '${currentSwitch}'.`);\r\n            }\r\n        } else {\r\n            console.warn(`TimerCard: Configured timer_instance_id '${targetEntryId}' does not have a corresponding simple_timer sensor found.`);\r\n        }\r\n    }\r\n\r\n    if (!entitiesAreValid && this._config?.sensor_entity) {\r\n        const sensorState = this.hass.states[this._config.sensor_entity];\r\n        if (sensorState && typeof sensorState.attributes.entry_id === 'string' && typeof sensorState.attributes.switch_entity_id === 'string') {\r\n            currentSensor = this._config.sensor_entity;\r\n            currentSwitch = sensorState.attributes.switch_entity_id as string | null;\r\n            if (currentSwitch && this.hass.states[currentSwitch]) {\r\n                entitiesAreValid = true;\r\n                console.info(`TimerCard: Using manually configured sensor_entity: Sensor '${currentSensor}', Switch '${currentSwitch}'.`);\r\n            } else {\r\n                console.warn(`TimerCard: Manually configured sensor '${currentSensor}' links to missing or invalid switch '${currentSwitch}'.`);\r\n            }\r\n        } else {\r\n            console.warn(`TimerCard: Manually configured sensor_entity '${this._config.sensor_entity}' not found or missing required attributes.`);\r\n        }\r\n    }\r\n\r\n    if (!entitiesAreValid) {\r\n        const allSensors = Object.keys(this.hass.states).filter(entityId => entityId.startsWith('sensor.'));\r\n        const autoDetectedSensorKey = allSensors.find(entityId => {\r\n            const state = this.hass!.states[entityId];\r\n            return typeof state.attributes.entry_id === 'string' && typeof state.attributes.switch_entity_id === 'string';\r\n        });\r\n\r\n        if (autoDetectedSensorKey) {\r\n            const sensorState = this.hass.states[autoDetectedSensorKey];\r\n            currentSensor = autoDetectedSensorKey;\r\n            currentSwitch = sensorState.attributes.switch_entity_id as string | null;\r\n            if (currentSwitch && this.hass.states[currentSwitch]) {\r\n                entitiesAreValid = true;\r\n                console.info(`TimerCard: Auto-detected first instance: Sensor '${currentSensor}', Switch '${currentSwitch}'.`);\r\n            } else {\r\n                console.warn(`TimerCard: Auto-detected sensor '${currentSensor}' links to missing or invalid switch '${currentSwitch}'.`);\r\n            }\r\n        } else {\r\n            console.info(`TimerCard: No simple_timer sensor found for auto-detection.`);\r\n        }\r\n    }\r\n\r\n    if (this._effectiveSwitchEntity !== currentSwitch || this._effectiveSensorEntity !== currentSensor) {\r\n        this._effectiveSwitchEntity = currentSwitch;\r\n        this._effectiveSensorEntity = currentSensor;\r\n        this.requestUpdate();\r\n    }\r\n\r\n    this._entitiesLoaded = entitiesAreValid;\r\n  }\r\n\r\n  _getEntryId(): string | null {\r\n    if (!this._effectiveSensorEntity || !this.hass || !this.hass.states) {\r\n      console.error(\"Timer-card: _getEntryId called without a valid effective sensor entity.\");\r\n      return null;\r\n    }\r\n    const sensor = this.hass.states[this._effectiveSensorEntity];\r\n    if (sensor && sensor.attributes.entry_id) {\r\n      return sensor.attributes.entry_id;\r\n    }\r\n    console.error(\"Could not determine entry_id from effective sensor_entity attributes:\", this._effectiveSensorEntity);\r\n    return null;\r\n  }\r\n  \r\n  _sendNotification(message: string): void {\r\n    if (!this.hass || !this.hass.callService || !this._config?.notification_entity || this._config.notification_entity === \"none_selected\") {\r\n      return;\r\n    }\r\n    const serviceParts = this._config.notification_entity.split('.');\r\n    const domain = serviceParts[0];\r\n    const service = serviceParts.slice(1).join('.');\r\n\r\n    this.hass.callService(domain, service, { message: message })\r\n      .catch(error => {\r\n        console.warn(\"Timer-card: Notification failed:\", error);\r\n      });\r\n  }\r\n\r\n  _startTimer(minutes: number): void {\r\n    if (!this._entitiesLoaded || !this.hass || !this.hass.callService) {\r\n        console.error(\"Timer-card: Cannot start timer. Entities not loaded or callService unavailable.\");\r\n        return;\r\n    }\r\n    const entryId = this._getEntryId();\r\n    if (!entryId) { console.error(\"Timer-card: Entry ID not found for starting timer.\"); return; }\r\n    \r\n    const switchId = this._effectiveSwitchEntity!;\r\n\r\n    this.hass.callService(\"homeassistant\", \"turn_on\", { entity_id: switchId })\r\n      .then(() => {\r\n        this.hass!.callService(DOMAIN, \"start_timer\", { entry_id: entryId, duration: minutes });\r\n        this._sendNotification(`Timer was turned on for ${minutes} minutes`);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Timer-card: Error turning on switch or starting timer:\", error);\r\n      });\r\n    this._notificationSentForCurrentCycle = false;\r\n  }\r\n\r\n  _cancelTimer(): void {\r\n    if (!this._entitiesLoaded || !this.hass || !this.hass.callService) {\r\n        console.error(\"Timer-card: Cannot cancel timer. Entities not loaded or callService unavailable.\");\r\n        return;\r\n    }\r\n    const entryId = this._getEntryId();\r\n    if (!entryId) { console.error(\"Timer-card: Entry ID not found for cancelling timer.\"); return; }\r\n\r\n    const switchId = this._effectiveSwitchEntity!;\r\n\r\n    this.hass.callService(\"homeassistant\", \"turn_off\", { entity_id: switchId })\r\n      .then(() => {\r\n        this.hass!.callService(DOMAIN, \"cancel_timer\", { entry_id: entryId });\r\n        this._sendTimerFinishedNotification();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Timer-card: Error turning off switch or cancelling timer:\", error);\r\n      });\r\n    this._notificationSentForCurrentCycle = false;\r\n  }\r\n\t\r\n  _togglePower(): void {\r\n    if (!this._entitiesLoaded || !this.hass || !this.hass.states || !this.hass.callService) {\r\n        console.error(\"Timer-card: Cannot toggle power. Entities not loaded or services unavailable.\");\r\n        return;\r\n    }\r\n    const switchId = this._effectiveSwitchEntity!;\r\n\r\n    const timerSwitch = this.hass.states[switchId];\r\n    if (!timerSwitch) {\r\n        console.warn(`Timer-card: Switch entity '${switchId}' not found during toggle.`);\r\n        return;\r\n    }\r\n\r\n    if (timerSwitch.state === 'on') {\r\n      this._cancelTimer();\r\n      console.log(`Timer-card: Manually turning off switch: ${switchId}`);\r\n    } else {\r\n      // Use generic HA service instead of domain-specific\r\n      this.hass.callService(\"homeassistant\", \"turn_on\", { entity_id: switchId })\r\n        .then(() => {\r\n            this._sendNotification(\"Timer started\");\r\n            console.log(`Timer-card: Manually turning on switch: ${switchId}`);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Timer-card: Error manually turning on switch:\", error);\r\n        });\r\n      this._notificationSentForCurrentCycle = false;\r\n    }\r\n  }\r\n\r\n  _showMoreInfo(): void {\r\n    if (!this._entitiesLoaded || !this.hass) {\r\n        console.error(\"Timer-card: Cannot show more info. Entities not loaded.\");\r\n        return;\r\n    }\r\n    const sensorId = this._effectiveSensorEntity!;\r\n\r\n    const event = new CustomEvent(\"hass-more-info\", {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { entityId: sensorId }\r\n    });\r\n    this.dispatchEvent(event);\r\n  }\r\n  \r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    this._determineEffectiveEntities();\r\n    this._updateLiveRuntime();\r\n    this._updateCountdown();\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    super.disconnectedCallback();\r\n    this._stopCountdown();\r\n    this._stopLiveRuntime();\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\r\n    if (changedProperties.has(\"hass\") || changedProperties.has(\"_config\")) {\r\n        this._determineEffectiveEntities();\r\n        this._updateLiveRuntime();\r\n        this._updateCountdown();\r\n    }\r\n  }\r\n\r\n  _updateLiveRuntime(): void {\r\n    this._liveRuntimeSeconds = 0;\r\n  }\r\n\r\n  _stopLiveRuntime(): void {\r\n    this._liveRuntimeSeconds = 0;\r\n  }\r\n\r\n  _updateCountdown(): void {\r\n    if (!this._entitiesLoaded || !this.hass || !this.hass.states) {\r\n      this._stopCountdown();\r\n      return;\r\n    }\r\n    const sensor = this.hass.states[this._effectiveSensorEntity!];\r\n    \r\n    if (!sensor || sensor.attributes.timer_state !== 'active') {\r\n      this._stopCountdown();\r\n      this._notificationSentForCurrentCycle = false;\r\n      return;\r\n    }\r\n\r\n    if (!this._countdownInterval) {\r\n        const rawFinish = sensor.attributes.timer_finishes_at;\r\n        if (rawFinish === undefined) {\r\n            console.warn(\"Timer-card: timer_finishes_at is undefined for active timer. Stopping countdown.\");\r\n            this._stopCountdown();\r\n            return;\r\n        }\r\n        const finishesAt = new Date(rawFinish).getTime();\r\n\r\n        const update = () => {\r\n          const now = new Date().getTime();\r\n          const remaining = Math.max(0, Math.round((finishesAt - now) / 1000));\r\n          this._timeRemaining = `${Math.floor(remaining / 60).toString().padStart(2, '0')}:${(remaining % 60).toString().padStart(2, '0')}`;\r\n\r\n          if (remaining === 0) {\r\n              this._stopCountdown();\r\n              if (!this._notificationSentForCurrentCycle) {\r\n                  const finalSensorState = this.hass!.states[this._effectiveSensorEntity!];\r\n                  const committedSeconds = parseFloat(finalSensorState.state as string) || 0;\r\n                  \r\n                  const totalMinutes = Math.round(committedSeconds / 60);\r\n                  const hours = Math.floor(totalMinutes / 60);\r\n                  const minutes = totalMinutes % 60;\r\n                  const formattedDailyUsage = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n                  \r\n                  this._sendNotification(`Timer was turned off - daily usage ${formattedDailyUsage} (hh:mm)`);\r\n                  this._notificationSentForCurrentCycle = true;\r\n              }\r\n          }\r\n        };\r\n        this._countdownInterval = window.setInterval(update, 500);\r\n        update();\r\n    }\r\n  }\r\n\r\n  _stopCountdown(): void {\r\n    if (this._countdownInterval) {\r\n      window.clearInterval(this._countdownInterval);\r\n      this._countdownInterval = null;\r\n    }\r\n    this._timeRemaining = null;\r\n  }\r\n\r\n  _sendTimerFinishedNotification(): void {\r\n    if (!this._entitiesLoaded || !this.hass || !this.hass.states) return;\r\n\r\n    const sensor = this.hass!.states[this._effectiveSensorEntity!];\r\n    if (!sensor) return;\r\n\r\n    const committedSeconds = parseFloat(sensor.state as string) || 0;\r\n    const totalMinutes = Math.round(committedSeconds / 60);\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n    const formattedDailyUsage = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n    \r\n    this._sendNotification(`Timer finished – daily usage ${formattedDailyUsage} (hh:mm)`);\r\n  }\r\n  \r\n  render() {\r\n    let message: string | null = null;\r\n    let isWarning = false;\r\n\r\n    if (!this.hass) {\r\n        message = \"Home Assistant object (hass) not available. Card cannot load.\";\r\n        isWarning = true;\r\n    } else if (!this._entitiesLoaded) {\r\n        if (this._config?.timer_instance_id) {\r\n            const configuredSensorState = Object.values(this.hass.states).find(\r\n                (state: HAState) => state.attributes.entry_id === this._config!.timer_instance_id && state.entity_id.startsWith('sensor.')\r\n            ) as HAState | undefined;\r\n\r\n            if (!configuredSensorState) {\r\n                message = `Timer Control Instance '${this._config.timer_instance_id}' not found. Please select a valid instance in the card editor.`;\r\n                isWarning = true;\r\n            } else if (typeof configuredSensorState.attributes.switch_entity_id !== 'string' || !(configuredSensorState.attributes.switch_entity_id && this.hass.states[configuredSensorState.attributes.switch_entity_id])) {\r\n                message = `Timer Control Instance '${this._config.timer_instance_id}' linked to missing or invalid switch '${configuredSensorState.attributes.switch_entity_id}'. Please check instance configuration.`;\r\n                isWarning = true;\r\n            } else {\r\n                message = \"Loading Timer Control Card. Please wait...\";\r\n                isWarning = false;\r\n            }\r\n        } else if (this._config?.sensor_entity) {\r\n            const configuredSensorState = this.hass.states[this._config.sensor_entity];\r\n            if (!configuredSensorState) {\r\n                message = `Configured Timer Control Sensor '${this._config.sensor_entity}' not found. Please select a valid instance in the card editor.`;\r\n                isWarning = true;\r\n            } else if (typeof configuredSensorState.attributes.switch_entity_id !== 'string' || !(configuredSensorState.attributes.switch_entity_id && this.hass.states[configuredSensorState.attributes.switch_entity_id])) {\r\n                message = `Configured Timer Control Sensor '${this._config.sensor_entity}' is invalid or its linked switch '${configuredSensorState.attributes.switch_entity_id}' is missing. Please select a valid instance.`;\r\n                isWarning = true;\r\n            } else {\r\n                message = \"Loading Timer Control Card. Please wait...\";\r\n                isWarning = false;\r\n            }\r\n        } else {\r\n            message = \"Select a Timer Control Instance from the dropdown in the card editor to link this card.\";\r\n            isWarning = false;\r\n        }\r\n    }\r\n\r\n    if (message) {\r\n      return html`<ha-card><div class=\"${isWarning ? 'warning' : 'placeholder'}\">${message}</div></ha-card>`;\r\n    }\r\n\t\r\n    const timerSwitch = this.hass!.states[this._effectiveSwitchEntity!];\r\n    const sensor = this.hass!.states[this._effectiveSensorEntity!];\r\n    \r\n    const isOn = timerSwitch.state === 'on';\r\n    const isTimerActive = sensor.attributes.timer_state === 'active';\r\n    const timerDurationInMinutes = sensor.attributes.timer_duration || 0; \r\n    const isManualOn = isOn && !isTimerActive;\r\n\r\n    const committedSeconds = parseFloat(sensor.state as string) || 0; \r\n    \r\n    let totalSecondsForDisplay = committedSeconds;\r\n    \r\n    const totalMinutes = Math.floor(totalSecondsForDisplay / 60);\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n    const formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n    \r\n    const watchdogMessage = sensor.attributes.watchdog_message;\r\n\r\n    return html`\r\n      <ha-card>\r\n        ${this._config?.card_title ? html`<div class=\"card-title\">${this._config.card_title}</div>` : ''} \r\n        <div class=\"main-grid\">\r\n          <div class=\"button power-button ${isOn ? 'on' : ''}\" @click=${this._togglePower}><ha-icon icon=\"mdi:power\"></ha-icon></div>\r\n          <div class=\"button readonly\" @click=${this._showMoreInfo}>\r\n            <span class=\"daily-time-text\">${formattedTime}</span>\r\n            <span class=\"runtime-label\">Daily Usage (hh:mm)</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-grid\">\r\n        ${watchdogMessage ? html`\r\n          <div class=\"status-message warning\">\r\n            <ha-icon icon=\"mdi:alert-outline\" class=\"status-icon\"></ha-icon>\r\n            <span class=\"status-text\">${watchdogMessage}</span>\r\n          </div>\r\n        ` : ''}\r\n          ${this.buttons.map(minutes => {\r\n            const isActive = isTimerActive && timerDurationInMinutes === minutes;\r\n            const isDisabled = isManualOn || (isTimerActive && !isActive);\r\n            return html`\r\n              <div class=\"button timer-button ${isActive ? 'active' : ''} ${isDisabled ? 'disabled' : ''}\" @click=${() => { if (isActive) this._cancelTimer(); else if (!isDisabled) this._startTimer(minutes); }}>\r\n                ${isActive && this._timeRemaining ? html`<span class=\"countdown-text\">${this._timeRemaining}</span>` : html`<div class=\"timer-button-content\"><span class=\"timer-button-value\">${minutes}</span><span class=\"timer-button-unit\">Min</span></div>`}\r\n              </div>\r\n            `;\r\n          })}\r\n        </div>\r\n        ${watchdogMessage || this._validationMessage ? html`\r\n          <div class=\"status-message warning\">\r\n            <ha-icon icon=\"mdi:alert-outline\" class=\"status-icon\"></ha-icon>\r\n            <span class=\"status-text\">${watchdogMessage || this._validationMessage}</span>\r\n          </div>\r\n        ` : ''}\r\n      </ha-card>\r\n    `;\r\n  }\r\n  \r\n  static get styles() {\r\n    return css`\r\n      :host { display: block; }\r\n      .ha-card {\r\n        padding: 0;\r\n      }\r\n      .card-title {\r\n        font-size: 1.2em;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        padding: 12px;\r\n        background-color: var(--primary-color-faded, rgba(150, 210, 230, 0.2));\r\n        border-bottom: 1px solid var(--divider-color);\r\n        color: var(--primary-text-color);\r\n        border-radius: 12px 12px 0 0;\r\n        margin-bottom: 12px;\r\n        /* NEW: Added white-space property to preserve spaces within the title */\r\n        white-space: pre-wrap; /* This should fix the trimming for the div itself */\r\n        word-break: break-word; /* Ensure long words break */\r\n      }\r\n      .card-title pre { /* This pre tag is no longer needed if div handles white-space */\r\n        margin: 0;\r\n        padding: 0;\r\n        /* white-space: pre-wrap;  Removed as parent div should handle it */\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        color: inherit;\r\n      }\r\n      .placeholder { padding: 16px; background-color: var(--secondary-background-color); }\r\n      .warning { padding: 16px; color: white; background-color: var(--error-color); }\r\n      .main-grid, .button-grid { gap: 12px; padding: 12px; }\r\n      .main-grid { display: grid; grid-template-columns: 1fr 1fr; }\r\n      .button-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(90px, 1fr)); padding-top: 0; }\r\n      .button { \r\n        display: flex; \r\n        flex-direction: column; \r\n        align-items: center; \r\n        justify-content: center; \r\n        padding: 16px 8px; \r\n        background-color: var(--secondary-background-color); \r\n        border-radius: 12px; \r\n        cursor: pointer; \r\n        transition: background-color 0.2s, opacity 0.2s; \r\n        text-align: center; \r\n        -webkit-tap-highlight-color: transparent; \r\n        height: 100px; \r\n        box-sizing: border-box; \r\n      }\r\n      .button:hover { background-color: var(--primary-color-faded, #3a506b); }\r\n      .power-button { \r\n        font-size: 80px; \r\n        --mdc-icon-size: 80px; \r\n        color: white; \r\n        background-color: var(--error-color); \r\n      }\r\n      .power-button.on { background-color: var(--success-color); }\r\n      .readonly { \r\n        background-color: var(--card-background-color); \r\n        border: 1px solid var(--secondary-background-color); \r\n        line-height: 1.2; \r\n        cursor: default; \r\n      }\r\n      .active, .active:hover { background-color: var(--primary-color); color: white; }\r\n      .countdown-text { font-size: 28px; font-weight: bold; color: white; }\r\n      .daily-time-text { font-size: 36px; font-weight: bold; }\r\n      .runtime-label { font-size: 14px; text-transform: uppercase; color: var(--secondary-text-color); margin-top: 2px; }\r\n      .timer-button-content { display: flex; flex-direction: column; align-items: center; justify-content: center; line-height: 1.1; }\r\n      .timer-button-value { font-size: 36px; font-weight: 500; color: var(--primary-text-color); }\r\n      .timer-button-unit { font-size: 14px; color: var(--secondary-text-color); }\r\n      .active .timer-button-value, .active .timer-button-unit { color: white; }\r\n      .disabled { opacity: 0.5; cursor: not-allowed; }\r\n      .disabled:hover { background-color: var(--secondary-background-color); }\r\n      .status-message { \r\n        display: flex; \r\n        align-items: center; \r\n        padding: 8px 12px; \r\n        margin: 0 12px 12px 12px; \r\n        border-radius: 8px; \r\n        border: 1px solid var(--warning-color); \r\n        background-color: rgba(var(--rgb-warning-color), 0.1); \r\n      }\r\n      .status-icon { color: var(--warning-color); margin-right: 8px; }\r\n      .status-text { font-size: 14px; color: var(--primary-text-color); }\r\n    \r\n      .status-message.warning {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 8px 12px;\r\n        margin: 0 12px 12px 12px;\r\n        border-radius: 8px;\r\n        border: 1px solid var(--warning-color);\r\n        background-color: rgba(var(--rgb-warning-color), 0.1);\r\n      }\r\n      .status-icon {\r\n        color: var(--warning-color);\r\n        margin-right: 8px;\r\n      }\r\n      .status-text {\r\n        font-size: 14px;\r\n        color: var(--primary-text-color);\r\n      }\r\n`;\r\n  }\r\n}\r\ncustomElements.define(\"timer-card\", TimerCard);\r\n\r\nwindow.customCards = window.customCards || [];\r\nwindow.customCards.push({\r\n  type: \"timer-card\",\r\n  name: \"Simple Timer Card\",\r\n  description: \"A card for the Simple Timer integration.\",\r\n});","// timer-card-editor.ts\r\n\r\nimport { LitElement, html, css } from 'lit';\r\n\r\n// Define necessary interfaces directly in this file for compilation robustness.\r\n// In a full project setup, these might reside in a shared 'global.d.ts' or types file.\r\n\r\ninterface TimerCardConfig {\r\n  type: string;\r\n  timer_instance_id?: string | null;\r\n  entity?: string | null;\r\n  sensor_entity?: string | null;\r\n  timer_buttons: number[];\r\n  notification_entity?: string | null;\r\n  card_title?: string | null;\r\n}\r\n\r\ninterface HAState {\r\n  entity_id: string;\r\n  state: string;\r\n  attributes: {\r\n    friendly_name?: string;\r\n    entry_id?: string;\r\n    switch_entity_id?: string;\r\n    instance_title?: string;\r\n    [key: string]: any;\r\n  };\r\n  last_changed: string;\r\n  last_updated: string;\r\n  context: {\r\n    id: string;\r\n    parent_id: string | null;\r\n    user_id: string | null;\r\n  };\r\n}\r\n\r\ninterface HAService {\r\n  description: string;\r\n  fields: {\r\n    [field: string]: {\r\n      description: string;\r\n      example: string;\r\n    };\r\n  };\r\n}\r\n\r\ninterface HomeAssistant {\r\n  states: {\r\n    [entityId: string]: HAState;\r\n  };\r\n  services: {\r\n    notify?: { [service: string]: HAService };\r\n    switch?: { [service: string]: HAService };\r\n    [domain: string]: { [service: string]: HAService } | undefined;\r\n  };\r\n  callService(domain: string, service: string, data?: Record<string, unknown>): Promise<void>;\r\n  callApi<T = unknown>(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, parameters?: Record<string, unknown>, headers?: Record<string, string>): Promise<T>;\r\n  config: {\r\n    components: {\r\n      [domain: string]: {\r\n        config_entries: { [entry_id: string]: unknown };\r\n      };\r\n    };\r\n    [key: string]: any;\r\n  };\r\n}\r\n\r\ninterface HAConfigEntry {\r\n  entry_id: string;\r\n  title: string;\r\n  domain: string;\r\n}\r\n\r\ninterface HAConfigEntriesByDomainResponse {\r\n  entry_by_domain: {\r\n    [domain: string]: HAConfigEntry[];\r\n  };\r\n}\r\n\r\nconst ATTR_INSTANCE_TITLE = \"instance_title\";\r\n\r\nconst DOMAIN = \"simple_timer\";\r\n\r\nclass TimerCardEditor extends LitElement {\r\n  static properties = {\r\n    hass: { type: Object },\r\n    _config: { type: Object },\r\n  };\r\n\r\n  hass?: HomeAssistant;\r\n  _config: TimerCardConfig;\r\n  _configFullyLoaded: boolean = false; // Track if we've received a complete config\r\n\r\n  private _timerInstancesOptions: Array<{ value: string; label: string }> = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this._config = {\r\n      type: \"custom:timer-card\",\r\n      timer_buttons: [15, 30, 60, 90, 120, 150],\r\n      notification_entity: null,\r\n      timer_instance_id: null,\r\n      card_title: null\r\n    };\r\n  }\r\n\r\n  async _getSimpleTimerInstances(): Promise<Array<{ value: string; label: string }>> {\r\n    if (!this.hass || !this.hass.states) {\r\n      console.warn(\"TimerCardEditor: hass.states not available when trying to fetch instances from states.\");\r\n      return [];\r\n    }\r\n\r\n    const instancesMap = new Map<string, { value: string; label: string }>();\r\n\r\n    for (const entityId in this.hass.states) {\r\n      const state = this.hass.states[entityId];\r\n      \r\n      // UPDATED: Look for sensors that have the required simple timer attributes\r\n      // The entity name format is now: \"[Instance Name] Runtime ([entry_id_short])\"\r\n      if (entityId.startsWith('sensor.') &&\r\n          entityId.includes('runtime') &&  // Runtime sensors contain 'runtime' in their ID\r\n          state.attributes.entry_id &&\r\n          typeof state.attributes.entry_id === 'string' &&\r\n          state.attributes.switch_entity_id &&\r\n          typeof state.attributes.switch_entity_id === 'string'\r\n         ) {\r\n        const entryId = state.attributes.entry_id;\r\n        const instanceTitle = state.attributes[ATTR_INSTANCE_TITLE]; \r\n\r\n        let instanceLabel = `Timer Control (${entryId.substring(0, 8)})`;\r\n\r\n        console.debug(`TimerCardEditor: Processing sensor ${entityId} (Entry: ${entryId})`);\r\n        console.debug(`TimerCardEditor: Found raw attribute '${ATTR_INSTANCE_TITLE}': ${instanceTitle}`);\r\n        console.debug(`TimerCardEditor: Type of raw attribute: ${typeof instanceTitle}`);\r\n\r\n        if (instanceTitle && typeof instanceTitle === 'string' && instanceTitle.trim() !== '') {\r\n            instanceLabel = instanceTitle.trim();\r\n            console.debug(`TimerCardEditor: Using '${ATTR_INSTANCE_TITLE}' for label: \"${instanceLabel}\"`);\r\n        } else {\r\n            console.warn(`TimerCardEditor: Sensor '${entityId}' has no valid '${ATTR_INSTANCE_TITLE}' attribute. Falling back to entry ID based label: \"${instanceLabel}\".`);\r\n        }\r\n        \r\n        if (!instancesMap.has(entryId)) {\r\n          instancesMap.set(entryId, { value: entryId, label: instanceLabel });\r\n          console.debug(`TimerCardEditor: Added instance: ${instanceLabel} (${entryId}) from sensor: ${entityId}`);\r\n        } else {\r\n            console.debug(`TimerCardEditor: Skipping duplicate entry_id: ${entryId}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const instances = Array.from(instancesMap.values());\r\n    instances.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n    if (instances.length === 0) {\r\n        console.info(`TimerCardEditor: No Simple Timer integration instances found by scanning hass.states.`);\r\n    } else {\r\n        console.info(\"TimerCardEditor: Found Simple Timer instances by scanning states:\", instances);\r\n    }\r\n    return instances;\r\n  }\r\n\r\n  _getNotificationServiceTargets(): Array<{ value: string; label: string }> {\r\n    if (!this.hass || !this.hass.services) {\r\n      return [];\r\n    }\r\n    const targets: Array<{ value: string; label: string }> = [];\r\n\r\n    if (this.hass.services.notify) {\r\n      for (const serviceName in this.hass.services.notify) {\r\n        if (serviceName !== \"send\" && !serviceName.includes(\"_all\") && !serviceName.includes(\"_group\")) {\r\n          const friendlyName = this.hass.services.notify[serviceName]?.description || serviceName;\r\n          targets.push({ value: `notify.${serviceName}`, label: friendlyName });\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const domain in this.hass.services) {\r\n      if (domain.includes(\"telegram\") || domain.includes(\"mobile_app\")) {\r\n        const domainServices = this.hass.services[domain];\r\n        for (const serviceName in domainServices) {\r\n          if (serviceName.includes(\"send\") || serviceName.includes(\"message\") || serviceName.includes(\"notify\")) {\r\n            const fullService = `${domain}.${serviceName}`;\r\n            if (!targets.some(t => t.value === fullService)) {\r\n                const friendlyName = domainServices[serviceName]?.description || fullService;\r\n                targets.push({ value: fullService, label: friendlyName });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    targets.sort((a, b) => a.label.localeCompare(b.label));\r\n    return targets;\r\n  }\r\n\r\n  async setConfig(cfg: TimerCardConfig): Promise<void> {\r\n    console.log(`TimerCardEditor: setConfig called with:`, cfg);\r\n    const oldConfig = { ...this._config };\r\n\r\n    const timerButtonsToSet = Array.isArray(cfg.timer_buttons)\r\n      ? [...cfg.timer_buttons].filter(val => Number.isInteger(val) && val > 0 && val <= 1000)\r\n      : [15, 30, 60, 90, 120, 150];\r\n\r\n    const newConfigData: TimerCardConfig = {\r\n      type: cfg.type || \"custom:timer-card\",\r\n      timer_buttons: timerButtonsToSet.sort((a, b) => a - b),\r\n      card_title: cfg.card_title || null\r\n    };\r\n\r\n    // SIMPLIFIED: Just preserve the timer_instance_id as-is from the config\r\n    // Don't do any auto-selection here - let _fetchTimerInstances handle that\r\n    if (cfg.timer_instance_id) {\r\n        newConfigData.timer_instance_id = cfg.timer_instance_id;\r\n        console.info(`TimerCardEditor: setConfig PRESERVING existing timer_instance_id: '${cfg.timer_instance_id}'`);\r\n    } else {\r\n        console.info(`TimerCardEditor: setConfig - no timer_instance_id in config, will be auto-selected later`);\r\n    }\r\n\r\n    // Preserve other legacy config fields if they exist\r\n    if (cfg.entity) newConfigData.entity = cfg.entity;\r\n    if (cfg.sensor_entity) newConfigData.sensor_entity = cfg.sensor_entity;\r\n    if (cfg.notification_entity) newConfigData.notification_entity = cfg.notification_entity;\r\n\r\n    // IMPORTANT: Set the config immediately, don't use setTimeout tricks\r\n    this._config = newConfigData;\r\n    \r\n    // Mark that we've received a complete config (this prevents premature auto-selection)\r\n    this._configFullyLoaded = true;\r\n    \r\n    console.log(`TimerCardEditor: setConfig result:`, this._config);\r\n    \r\n    // Only dispatch if config actually changed\r\n    if (JSON.stringify(oldConfig) !== JSON.stringify(this._config)) {\r\n        console.log(`TimerCardEditor: Config changed, dispatching config-changed event`);\r\n        this.dispatchEvent(\r\n            new CustomEvent(\"config-changed\", { detail: { config: this._config } })\r\n        );\r\n    } else {\r\n        console.log(`TimerCardEditor: Config unchanged, not dispatching event`);\r\n    }\r\n    \r\n    this.requestUpdate();\r\n  }\r\n\r\n  get _schema(): any[] {\r\n    const timerInstances = this._timerInstancesOptions || [];\r\n    const notificationServiceTargets = this._getNotificationServiceTargets();\r\n\r\n    const instanceOptions = timerInstances.length > 0\r\n        ? timerInstances\r\n        : [{ value: \"none_found\", label: \"No Simple Timer Instances Found\" }];\r\n\r\n    const notificationOptions = [{ value: \"none_selected\", label: \"None\" }];\r\n    notificationServiceTargets.forEach(target => notificationOptions.push(target));\r\n\r\n    return [\r\n      {\r\n        name: \"card_title\",\r\n        label: \"Card Title (Optional)\",\r\n        selector: {\r\n          text: {\r\n            type: \"text\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        name: \"timer_instance_id\",\r\n        label: \"Simple Timer Instance\",\r\n        required: true,\r\n        selector: {\r\n          select: {\r\n            options: instanceOptions,\r\n            mode: \"dropdown\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"notification_entity\",\r\n        label: \"Notification Service Target (Optional)\",\r\n        selector: {\r\n          select: {\r\n            options: notificationOptions,\r\n            custom_value: false,\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  connectedCallback() {\r\n      super.connectedCallback();\r\n      if (this.hass) {\r\n          this._fetchTimerInstances();\r\n      } else {\r\n          console.warn(\"TimerCardEditor: hass not available on connectedCallback. Deferring instance fetch.\");\r\n      }\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\r\n      super.updated(changedProperties);\r\n      if (changedProperties.has(\"hass\") && this.hass) {\r\n          if ((changedProperties.get(\"hass\") as any)?.states !== this.hass.states || this._timerInstancesOptions.length === 0) {\r\n               console.log(\"TimerCardEditor: hass.states changed or instances not yet fetched, re-fetching instances.\");\r\n               this._fetchTimerInstances();\r\n          }\r\n      }\r\n  }\r\n\r\n  async _fetchTimerInstances() {\r\n      if (this.hass) {\r\n          console.log(`TimerCardEditor: _fetchTimerInstances called. Config loaded: ${this._configFullyLoaded}, Current config timer_instance_id: '${this._config?.timer_instance_id}'`);\r\n          \r\n          this._timerInstancesOptions = await this._getSimpleTimerInstances();\r\n          console.log(`TimerCardEditor: Found ${this._timerInstancesOptions.length} instances:`, this._timerInstancesOptions);\r\n          \r\n          // CRITICAL: Only allow auto-selection if we're sure the config is fully loaded\r\n          // This prevents overriding user selections when the editor is re-opened\r\n          if (!this._configFullyLoaded) {\r\n              console.info(`TimerCardEditor: Config not fully loaded yet, skipping any auto-selection logic`);\r\n              this.requestUpdate();\r\n              return;\r\n          }\r\n          \r\n          // AUTO-SELECT: Only auto-select if NO instance is currently configured\r\n          // AND instances are available. Don't override existing valid selections.\r\n          const hasNoInstanceConfigured = !this._config?.timer_instance_id || \r\n                                        this._config.timer_instance_id === \"none_found\" ||\r\n                                        this._config.timer_instance_id === \"\";\r\n          const hasAvailableInstances = this._timerInstancesOptions.length > 0;\r\n          \r\n          console.log(`TimerCardEditor: hasNoInstanceConfigured: ${hasNoInstanceConfigured}, hasAvailableInstances: ${hasAvailableInstances}`);\r\n          \r\n          if (hasNoInstanceConfigured && hasAvailableInstances) {\r\n              const firstInstance = this._timerInstancesOptions[0];\r\n              console.info(`TimerCardEditor: AUTO-SELECTING first available instance (no valid instance configured): '${firstInstance.value}' (${firstInstance.label})`);\r\n              \r\n              // Update the config to include the auto-selected instance\r\n              const updatedConfig: TimerCardConfig = {\r\n                  ...this._config,\r\n                  timer_instance_id: firstInstance.value\r\n              };\r\n              \r\n              this._config = updatedConfig;\r\n              this.dispatchEvent(\r\n                  new CustomEvent(\"config-changed\", {\r\n                      detail: { config: this._config },\r\n                      bubbles: true,\r\n                      composed: true,\r\n                  }),\r\n              );\r\n          } else if (this._config?.timer_instance_id && hasAvailableInstances) {\r\n              // Verify that the currently configured instance still exists\r\n              const currentInstanceExists = this._timerInstancesOptions.some(\r\n                  instance => instance.value === this._config!.timer_instance_id\r\n              );\r\n              \r\n              if (!currentInstanceExists) {\r\n                  console.warn(`TimerCardEditor: Previously configured instance '${this._config.timer_instance_id}' no longer exists. Auto-selecting first available instance.`);\r\n                  const firstInstance = this._timerInstancesOptions[0];\r\n                  \r\n                  const updatedConfig: TimerCardConfig = {\r\n                      ...this._config,\r\n                      timer_instance_id: firstInstance.value\r\n                  };\r\n                  \r\n                  this._config = updatedConfig;\r\n                  this.dispatchEvent(\r\n                      new CustomEvent(\"config-changed\", {\r\n                          detail: { config: this._config },\r\n                          bubbles: true,\r\n                          composed: true,\r\n                      }),\r\n                  );\r\n              } else {\r\n                  console.info(`TimerCardEditor: PRESERVING existing valid instance: '${this._config.timer_instance_id}'`);\r\n              }\r\n          } else if (!hasAvailableInstances) {\r\n              console.warn(`TimerCardEditor: No simple timer instances found.`);\r\n          }\r\n          \r\n          this.requestUpdate();\r\n      }\r\n  }\r\n\r\n  _allTimerOptions: number[] = [1, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180];\r\n\r\n  _handleTimerCheckboxChange(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const value = parseInt(inputElement.value);\r\n    const isChecked = inputElement.checked;\r\n    let currentButtons = Array.isArray(this._config?.timer_buttons) ? [...this._config!.timer_buttons] : [];\r\n\r\n    if (isChecked) {\r\n      if (!currentButtons.includes(value)) {\r\n        currentButtons.push(value);\r\n      }\r\n    } else {\r\n      currentButtons = currentButtons.filter(button => button !== value);\r\n    }\r\n\r\n    currentButtons.sort((a, b) => a - b);\r\n\r\n    const updatedConfig: TimerCardConfig = {\r\n        type: this._config!.type,\r\n        timer_buttons: currentButtons,\r\n    };\r\n    if (this._config?.timer_instance_id) updatedConfig.timer_instance_id = this._config.timer_instance_id;\r\n    if (this._config?.entity) updatedConfig.entity = this._config.entity;\r\n    if (this._config?.sensor_entity) updatedConfig.sensor_entity = this._config.sensor_entity;\r\n    if (this._config?.notification_entity) updatedConfig.notification_entity = this._config.notification_entity;\r\n    if (this._config?.card_title) updatedConfig.card_title = this._config.card_title;\r\n\r\n    this._config = updatedConfig;\r\n    this.dispatchEvent(\r\n      new CustomEvent(\"config-changed\", {\r\n        detail: { config: this._config },\r\n        bubbles: true,\r\n        composed: true,\r\n      }),\r\n    );\r\n    this.requestUpdate();\r\n  }\r\n\r\n  render() {\r\n    if (!this.hass) return html``;\r\n\r\n    return html`\r\n      <ha-form\r\n        .hass=${this.hass}\r\n        .data=${this._config}\r\n        .schema=${this._schema}\r\n        @value-changed=${this._valueChanged}\r\n      ></ha-form>\r\n\r\n      <div class=\"card-config-group\">\r\n        <h3>Select your timers (Minutes)</h3>\r\n        <div class=\"checkbox-grid\">\r\n          ${this._allTimerOptions.map(value => html`\r\n            <label class=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"${value}\"\r\n                .checked=${Array.isArray(this._config?.timer_buttons) && this._config!.timer_buttons.includes(value)}\r\n                @change=${this._handleTimerCheckboxChange}\r\n              >\r\n              ${value}\r\n            </label>\r\n          `)}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  _valueChanged(ev: CustomEvent): void {\r\n    ev.stopPropagation();\r\n    const newFormValues = ev.detail.value;\r\n\r\n    if (!this._config) {\r\n      console.warn(\"TimerCardEditor: _config is null in _valueChanged, deferring update.\");\r\n      return;\r\n    }\r\n\r\n    const updatedConfig: TimerCardConfig = {\r\n        type: newFormValues.type || this._config.type || \"custom:timer-card\",\r\n        timer_buttons: this._config.timer_buttons\r\n    };\r\n\r\n    if (newFormValues.timer_instance_id && newFormValues.timer_instance_id !== \"none_found\") {\r\n        updatedConfig.timer_instance_id = newFormValues.timer_instance_id;\r\n    } else {\r\n        delete updatedConfig.timer_instance_id;\r\n    }\r\n\r\n    if (this._config.entity) updatedConfig.entity = this._config.entity;\r\n    if (this._config.sensor_entity) updatedConfig.sensor_entity = this._config.sensor_entity;\r\n\r\n    if (newFormValues.notification_entity && newFormValues.notification_entity !== \"none_selected\") {\r\n        updatedConfig.notification_entity = newFormValues.notification_entity;\r\n    } else if (newFormValues.notification_entity === \"none_selected\") {\r\n        delete updatedConfig.notification_entity;\r\n    } else if (this._config.notification_entity) {\r\n        updatedConfig.notification_entity = this._config.notification_entity;\r\n    }\r\n\r\n    // Handle card_title from newFormValues\r\n    if (newFormValues.card_title && newFormValues.card_title !== '') {\r\n        updatedConfig.card_title = newFormValues.card_title;\r\n    } else {\r\n        delete updatedConfig.card_title;\r\n    }\r\n\r\n    if (JSON.stringify(this._config) !== JSON.stringify(updatedConfig)) {\r\n        this._config = updatedConfig;\r\n        this.dispatchEvent(\r\n            new CustomEvent(\"config-changed\", {\r\n                detail: { config: this._config },\r\n                bubbles: true,\r\n                composed: true,\r\n            }),\r\n        );\r\n        this.requestUpdate();\r\n    }\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      .card-config-group {\r\n        padding: 16px;\r\n        background-color: var(--card-background-color);\r\n        border-top: 1px solid var(--divider-color);\r\n        margin-top: 16px;\r\n      }\r\n      h3 {\r\n        margin-top: 0;\r\n        margin-bottom: 16px;\r\n        font-size: 1.1em;\r\n        font-weight: normal;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .checkbox-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));\r\n        gap: 8px 16px;\r\n      }\r\n      @media (min-width: 400px) {\r\n        .checkbox-grid {\r\n          grid-template-columns: repeat(5, 1fr);\r\n        }\r\n      }\r\n      .checkbox-label {\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .checkbox-label input[type=\"checkbox\"] {\r\n        margin-right: 8px;\r\n        min-width: 20px;\r\n        min-height: 20px;\r\n      }\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"timer-card-editor\", TimerCardEditor);"],"names":["t","globalThis","e","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","s","Symbol","o","WeakMap","n$2","constructor","this","_$cssResult$","Error","cssText","styleSheet","length","get","replaceSync","set","toString","i","reduce","n","c","cssRules","r","is","defineProperty","getOwnPropertyDescriptor","h","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","Object","a","trustedTypes","l","emptyScript","p","reactiveElementPolyfillSupport","d","u","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","b","attribute","type","String","converter","reflect","useDefault","hasChanged","metadata","litPropertyMetadata","y$1","HTMLElement","addInitializer","_$Ei","push","observedAttributes","finalize","_$Eh","keys","createProperty","state","hasOwnProperty","create","wrapped","elementProperties","noAccessor","getPropertyDescriptor","call","requestUpdate","configurable","enumerable","getPropertyOptions","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","forEach","addController","_$EO","add","renderRoot","isConnected","hostConnected","removeController","delete","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$ET","removeAttribute","_$Ej","hasAttribute","C","_$EP","has","_$Eq","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$EM","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","y","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","Math","random","toFixed","slice","createComment","v","_","m","RegExp","g","$","x","_$litType$","strings","values","T","for","E","A","createTreeWalker","P","V","lastIndex","exec","test","startsWith","N","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","index","name","ctor","H","I","L","k","tagName","append","data","indexOf","innerHTML","S","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","M","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","R","nextSibling","z","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","iterator","O","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","arguments","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","litHtmlPolyfillSupport","litHtmlVersions","renderOptions","_$Do","renderBefore","render","_$litPart$","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","litElementVersions","DOMAIN","console","info","customElements","define","_countdownInterval","_liveRuntimeSeconds","_timeRemaining","buttons","_validationMessage","_notificationSentForCurrentCycle","_entitiesLoaded","_effectiveSwitchEntity","_effectiveSensorEntity","hass","_config","getConfigElement","resolve","then","timerCardEditor","getStubConfig","log","initialInstanceId","entityId","states","attributes","entry_id","switch_entity_id","timer_instance_id","timer_buttons","card_title","setConfig","cfg","entity","sensor_entity","notification_entity","validatedTimerButtons","invalidValues","val","numVal","isInteger","join","sort","_determineEffectiveEntities","currentSwitch","currentSensor","entitiesAreValid","_a","targetEntryId","instanceSensor","filter","find","warn","_b","sensorState","autoDetectedSensorKey","_getEntryId","error","sensor","_sendNotification","message","callService","serviceParts","domain","service","catch","_startTimer","minutes","entryId","switchId","entity_id","duration","_cancelTimer","_sendTimerFinishedNotification","_togglePower","timerSwitch","_showMoreInfo","sensorId","event","CustomEvent","bubbles","composed","detail","dispatchEvent","_updateLiveRuntime","_updateCountdown","_stopCountdown","_stopLiveRuntime","changedProperties","timer_state","rawFinish","timer_finishes_at","undefined","finishesAt","Date","getTime","now","remaining","max","round","floor","padStart","finalSensorState","committedSeconds","parseFloat","totalMinutes","formattedDailyUsage","window","setInterval","clearInterval","isWarning","configuredSensorState","html","isOn","isTimerActive","timerDurationInMinutes","timer_duration","isManualOn","totalSecondsForDisplay","formattedTime","watchdogMessage","watchdog_message","_c","isActive","isDisabled","css","customCards","description","ATTR_INSTANCE_TITLE","TimerCardEditor","_configFullyLoaded","_timerInstancesOptions","_allTimerOptions","_getSimpleTimerInstances","instancesMap","includes","instanceTitle","instanceLabel","substring","debug","trim","value","label","instances","from","localeCompare","_getNotificationServiceTargets","services","targets","notify","serviceName","friendlyName","domainServices","fullService","some","oldConfig","assign","timerButtonsToSet","newConfigData","config","_schema","timerInstances","notificationServiceTargets","instanceOptions","notificationOptions","target","selector","text","required","select","custom_value","_fetchTimerInstances","hasNoInstanceConfigured","hasAvailableInstances","firstInstance","updatedConfig","instance","_handleTimerCheckboxChange","inputElement","parseInt","isChecked","checked","currentButtons","button","_d","_e","_f","_valueChanged","ev","stopPropagation","newFormValues"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}