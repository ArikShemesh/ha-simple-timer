{"version":3,"file":"timer-card.js","sources":["../node_modules/@lit/reactive-element/css-tag.js","../node_modules/@lit/reactive-element/reactive-element.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-element/lit-element.js","../src/timer-card.styles.ts","../src/timer-card.ts","../src/timer-card-editor.styles.ts","../src/timer-card-editor.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.0\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","// timer-card.styles.ts\r\n\r\nimport { css } from 'lit';\r\n\r\nexport const cardStyles = css`\r\n      :host { display: block; }\r\n      ha-card {\r\n        padding: 0;\r\n        position: relative; /* Needed for absolute positioning of the repo link */\r\n      }\r\n      .card-header {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 1.2em;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        padding: 12px;\r\n        background-color: var(--primary-color-faded, rgba(150, 210, 230, 0.2));\r\n        border-bottom: 1px solid var(--divider-color);\r\n        color: var(--primary-text-color);\r\n        border-radius: 12px 12px 0 0;\r\n        margin-bottom: 12px;\r\n      }\r\n      .card-title {\r\n        flex-grow: 1;\r\n        white-space: pre-wrap;\r\n        word-break: break-word;\r\n      }\r\n      .repo-link {\r\n        position: absolute;\r\n        top: 12px;\r\n        right: 12px;\r\n        color: var(--secondary-text-color);\r\n        z-index: 1;\r\n      }\r\n      .repo-link:hover {\r\n        color: var(--primary-color);\r\n      }\r\n      .placeholder { padding: 16px; background-color: var(--secondary-background-color); }\r\n      .warning { padding: 16px; color: white; background-color: var(--error-color); }\r\n      .main-grid, .button-grid { gap: 12px; padding: 12px; }\r\n      .main-grid { display: grid; grid-template-columns: 1fr 1fr; }\r\n      .button-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(90px, 1fr)); padding-top: 0; }\r\n      .button {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 16px 8px;\r\n        background-color: var(--secondary-background-color);\r\n        border-radius: 12px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s, opacity 0.2s;\r\n        text-align: center;\r\n        -webkit-tap-highlight-color: transparent;\r\n        height: 100px;\r\n        box-sizing: border-box;\r\n      }\r\n      .button:hover { background-color: var(--primary-color-faded, #3a506b); }\r\n      .power-button {\r\n        font-size: 80px;\r\n        --mdc-icon-size: 80px;\r\n        color: white;\r\n        background-color: var(--error-color);\r\n      }\r\n      .power-button.on { background-color: var(--success-color); }\r\n      .readonly {\r\n        background-color: var(--card-background-color);\r\n        border: 1px solid var(--secondary-background-color);\r\n        line-height: 1.2;\r\n        cursor: default;\r\n      }\r\n      .active, .active:hover { background-color: var(--primary-color); color: white; }\r\n      .countdown-text { font-size: 28px; font-weight: bold; color: white; }\r\n      .daily-time-text {\r\n        font-size: 36px;\r\n        font-weight: bold;\r\n      }\r\n      .daily-time-text.with-seconds {\r\n        font-size: 28px;\r\n      }\r\n      .runtime-label { font-size: 14px; text-transform: uppercase; color: var(--secondary-text-color); margin-top: 2px; }\r\n      .timer-button-content { display: flex; flex-direction: column; align-items: center; justify-content: center; line-height: 1.1; }\r\n      .timer-button-value { font-size: 36px; font-weight: 500; color: var(--primary-text-color); }\r\n      .timer-button-unit { font-size: 14px; color: var(--secondary-text-color); }\r\n      .active .timer-button-value, .active .timer-button-unit { color: white; }\r\n      .disabled { opacity: 0.5; cursor: not-allowed; }\r\n      .disabled:hover { background-color: var(--secondary-background-color); }\r\n      .status-message {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 8px 12px;\r\n        margin: 0 12px 12px 12px;\r\n        border-radius: 8px;\r\n        border: 1px solid var(--warning-color);\r\n        background-color: rgba(var(--rgb-warning-color), 0.1);\r\n      }\r\n      .status-icon { color: var(--warning-color); margin-right: 8px; }\r\n      .status-text { font-size: 14px; color: var(--primary-text-color); }\r\n      .watchdog-banner {\r\n        margin: 0 0 12px 0;\r\n        border-radius: 0;\r\n        grid-column: 1 / -1;\r\n      }\r\n      .status-message.warning {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 8px 12px;\r\n        margin: 0 12px 12px 12px;\r\n        border-radius: 8px;\r\n        border: 1px solid var(--warning-color);\r\n        background-color: rgba(var(--rgb-warning-color), 0.1);\r\n      }\r\n      .status-icon {\r\n        color: var(--warning-color);\r\n        margin-right: 8px;\r\n      }\r\n      .status-text {\r\n        font-size: 14px;\r\n        color: var(--primary-text-color);\r\n      }\r\n`;\r\n","// timer-card.ts\r\n\r\nimport { LitElement, html } from 'lit';\r\nimport { cardStyles } from './timer-card.styles';\r\nimport { version } from \"../package.json\"\r\n\r\n// Ensure HomeAssistant and TimerCardConfig are recognized from global.d.ts\r\n\r\nconst DOMAIN = \"simple_timer\";\r\nconst CARD_VERSION = version;\r\nconst REPO_URL = \"https://github.com/ArikShemesh/ha-simple-timer\";\r\nconst DEFAULT_TIMER_BUTTONS = [15, 30, 60, 90, 120, 150]; // Default for new cards only\r\n\r\nconsole.info(\r\n  `%c TIMER-CARD %c v${CARD_VERSION} `,\r\n  'color: orange; font-weight: bold; background: black',\r\n  'color: white; font-weight: bold; background: dimgray',\r\n);\r\n\r\nclass TimerCard extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      hass: { type: Object },\r\n      _config: { type: Object },\r\n      _timeRemaining: { state: true },\r\n      _entitiesLoaded: { state: true },\r\n      _effectiveSwitchEntity: { state: true },\r\n      _effectiveSensorEntity: { state: true },\r\n      _validationMessages: { state: true },\r\n    };\r\n  }\r\n\r\n  hass?: HomeAssistant;\r\n  _config?: TimerCardConfig;\r\n\r\n  _countdownInterval: number | null = null;\r\n  _liveRuntimeSeconds: number = 0;\r\n\r\n  _timeRemaining: string | null = null;\r\n\r\n  buttons: number[] = [];\r\n  _validationMessages: string[] = [];\r\n  _notificationSentForCurrentCycle: boolean = false;\r\n  _entitiesLoaded: boolean = false;\r\n\r\n  _effectiveSwitchEntity: string | null = null;\r\n  _effectiveSensorEntity: string | null = null;\r\n\r\n  static async getConfigElement(): Promise<HTMLElement> {\r\n    await import(\"./timer-card-editor.js\");\r\n    return document.createElement(\"timer-card-editor\");\r\n  }\r\n\r\n  static getStubConfig(_hass: HomeAssistant): TimerCardConfig {\r\n    console.log(\"TimerCard: Generating stub config - NO auto-selection will be performed\");\r\n    \r\n    // MODIFIED: Remove auto-selection completely\r\n    // Return a config with no timer_instance_id so user must manually select\r\n    return {\r\n      type: \"custom:timer-card\",\r\n      timer_instance_id: null, // Changed from auto-selected instance to null\r\n      timer_buttons: [...DEFAULT_TIMER_BUTTONS], // Use default buttons\r\n      card_title: \"Simple Timer\",\r\n      show_seconds: false\r\n    };\r\n  }\r\n\r\n  setConfig(cfg: TimerCardConfig): void {\r\n    this._config = {\r\n      type: cfg.type || \"custom:timer-card\",\r\n      timer_buttons: this._getValidatedTimerButtons(cfg.timer_buttons),\r\n      card_title: cfg.card_title || null,\r\n      show_seconds: cfg.show_seconds || false\r\n    };\r\n\r\n    if (cfg.timer_instance_id) {\r\n        this._config.timer_instance_id = cfg.timer_instance_id;\r\n    }\r\n    if (cfg.entity) {\r\n        this._config.entity = cfg.entity;\r\n    }\r\n    if (cfg.sensor_entity) {\r\n        this._config.sensor_entity = cfg.sensor_entity;\r\n    }\r\n    if (cfg.notification_entity) {\r\n        this._config.notification_entity = cfg.notification_entity;\r\n    }\r\n\r\n    // Set buttons from validated config - could be empty array\r\n    this.buttons = [...this._config.timer_buttons];\r\n\r\n    this._liveRuntimeSeconds = 0;\r\n    this._notificationSentForCurrentCycle = false;\r\n\r\n    this._effectiveSwitchEntity = null;\r\n    this._effectiveSensorEntity = null;\r\n    this._entitiesLoaded = false;\r\n    console.log(`TimerCard: setConfig completed. Configured instance ID: ${this._config.timer_instance_id}, Buttons: ${this.buttons.length}, Show seconds: ${this._config.show_seconds}`);\r\n  }\r\n\r\n  _getValidatedTimerButtons(configButtons: any): number[] {\r\n    let validatedTimerButtons: number[] = [];\r\n    this._validationMessages = [];\r\n\r\n    if (Array.isArray(configButtons)) {\r\n        const invalidValues: any[] = [];\r\n        const uniqueValues = new Set<number>();\r\n        const duplicateValues: any[] = [];\r\n\r\n        configButtons.forEach(val => {\r\n            const numVal = Number(val);\r\n            if (Number.isInteger(numVal) && numVal > 0 && numVal <= 1000) {\r\n                if (uniqueValues.has(numVal)) {\r\n                    duplicateValues.push(numVal);\r\n                } else {\r\n                    uniqueValues.add(numVal);\r\n                    validatedTimerButtons.push(numVal);\r\n                }\r\n            } else {\r\n                invalidValues.push(val);\r\n            }\r\n        });\r\n\r\n        const messages: string[] = [];\r\n        if (invalidValues.length > 0) {\r\n            messages.push(`Invalid timer values ignored: ${invalidValues.join(', ')}. Only positive integers up to 1000 are allowed.`);\r\n        }\r\n        if (duplicateValues.length > 0) {\r\n            messages.push(`Duplicate timer values were removed: ${[...new Set(duplicateValues)].join(', ')}.`);\r\n        }\r\n        this._validationMessages = messages;\r\n\r\n        validatedTimerButtons.sort((a, b) => a - b);\r\n        return validatedTimerButtons;\r\n    }\r\n\r\n    if (configButtons === undefined || configButtons === null) {\r\n        return [];\r\n    }\r\n\r\n    console.warn(`TimerCard: Invalid timer_buttons type (${typeof configButtons}):`, configButtons, `- using empty array`);\r\n    this._validationMessages = [`Invalid timer_buttons configuration. Expected array, got ${typeof configButtons}.`];\r\n    return [];\r\n  }\r\n\r\n  _determineEffectiveEntities(): void {\r\n    let currentSwitch: string | null = null;\r\n    let currentSensor: string | null = null;\r\n    let entitiesAreValid = false;\r\n\r\n    if (!this.hass || !this.hass.states) {\r\n        this._entitiesLoaded = false;\r\n        return;\r\n    }\r\n\r\n    if (this._config?.timer_instance_id) {\r\n        const targetEntryId = this._config.timer_instance_id;\r\n        const allSensors = Object.keys(this.hass.states).filter(entityId => entityId.startsWith('sensor.'));\r\n        const instanceSensor = allSensors.find(entityId => {\r\n            const state = this.hass!.states[entityId];\r\n            return state.attributes.entry_id === targetEntryId &&\r\n                   typeof state.attributes.switch_entity_id === 'string';\r\n        });\r\n\r\n        if (instanceSensor) {\r\n            const sensorState = this.hass.states[instanceSensor];\r\n            currentSensor = instanceSensor;\r\n            currentSwitch = sensorState.attributes.switch_entity_id as string | null;\r\n\r\n            if (currentSwitch && this.hass.states[currentSwitch]) {\r\n                entitiesAreValid = true;\r\n            } else {\r\n                console.warn(`TimerCard: Configured instance '${targetEntryId}' sensor '${currentSensor}' links to missing or invalid switch '${currentSwitch}'.`);\r\n            }\r\n        } else {\r\n            console.warn(`TimerCard: Configured timer_instance_id '${targetEntryId}' does not have a corresponding simple_timer sensor found.`);\r\n        }\r\n    }\r\n\r\n    if (!entitiesAreValid && this._config?.sensor_entity) {\r\n        const sensorState = this.hass.states[this._config.sensor_entity];\r\n        if (sensorState && typeof sensorState.attributes.entry_id === 'string' && typeof sensorState.attributes.switch_entity_id === 'string') {\r\n            currentSensor = this._config.sensor_entity;\r\n            currentSwitch = sensorState.attributes.switch_entity_id as string | null;\r\n            if (currentSwitch && this.hass.states[currentSwitch]) {\r\n                entitiesAreValid = true;\r\n                console.info(`TimerCard: Using manually configured sensor_entity: Sensor '${currentSensor}', Switch '${currentSwitch}'.`);\r\n            } else {\r\n                console.warn(`TimerCard: Manually configured sensor '${currentSensor}' links to missing or invalid switch '${currentSwitch}'.`);\r\n            }\r\n        } else {\r\n            console.warn(`TimerCard: Manually configured sensor_entity '${this._config.sensor_entity}' not found or missing required attributes.`);\r\n        }\r\n    }\r\n\r\n    // REMOVED: Auto-detection fallback logic\r\n    // This was causing the card to automatically connect to the first available instance\r\n    // even when no timer_instance_id was configured\r\n    \r\n    if (this._effectiveSwitchEntity !== currentSwitch || this._effectiveSensorEntity !== currentSensor) {\r\n        this._effectiveSwitchEntity = currentSwitch;\r\n        this._effectiveSensorEntity = currentSensor;\r\n        this.requestUpdate();\r\n    }\r\n\r\n    this._entitiesLoaded = entitiesAreValid;\r\n  }\r\n\r\n  _getEntryId(): string | null {\r\n    if (!this._effectiveSensorEntity || !this.hass || !this.hass.states) {\r\n      console.error(\"Timer-card: _getEntryId called without a valid effective sensor entity.\");\r\n      return null;\r\n    }\r\n    const sensor = this.hass.states[this._effectiveSensorEntity];\r\n    if (sensor && sensor.attributes.entry_id) {\r\n      return sensor.attributes.entry_id;\r\n    }\r\n    console.error(\"Could not determine entry_id from effective sensor_entity attributes:\", this._effectiveSensorEntity);\r\n    return null;\r\n  }\r\n\r\n\t_startTimer(minutes: number): void {\r\n        this._validationMessages = [];\r\n\t\tif (!this._entitiesLoaded || !this.hass || !this.hass.callService) {\r\n\t\t\t\tconsole.error(\"Timer-card: Cannot start timer. Entities not loaded or callService unavailable.\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tconst entryId = this._getEntryId();\r\n\t\tif (!entryId) { console.error(\"Timer-card: Entry ID not found for starting timer.\"); return; }\r\n\r\n\t\tconst switchId = this._effectiveSwitchEntity!;\r\n\r\n\t\tthis.hass.callService(\"homeassistant\", \"turn_on\", { entity_id: switchId })\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.hass!.callService(DOMAIN, \"start_timer\", { entry_id: entryId, duration: minutes });\r\n\t\t\t\t// No manual notification - backend handles it\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(\"Timer-card: Error turning on switch or starting timer:\", error);\r\n\t\t\t});\r\n\t\tthis._notificationSentForCurrentCycle = false;\r\n\t}\r\n\r\n\t_cancelTimer(): void {\r\n        this._validationMessages = [];\r\n\t\tif (!this._entitiesLoaded || !this.hass || !this.hass.callService) {\r\n\t\t\t\tconsole.error(\"Timer-card: Cannot cancel timer. Entities not loaded or callService unavailable.\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tconst entryId = this._getEntryId();\r\n\t\tif (!entryId) { console.error(\"Timer-card: Entry ID not found for cancelling timer.\"); return; }\r\n\r\n\t\tthis.hass.callService(DOMAIN, \"cancel_timer\", { entry_id: entryId })\r\n\t\t\t.then(() => {\r\n\t\t\t\t// No manual notification - backend handles it\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(\"Timer-card: Error cancelling timer:\", error);\r\n\t\t\t});\r\n\r\n\t\tthis._notificationSentForCurrentCycle = false;\r\n\t}\r\n\r\n\t_togglePower(): void {\r\n        this._validationMessages = [];\r\n\t\tif (!this._entitiesLoaded || !this.hass || !this.hass.states || !this.hass.callService) {\r\n\t\t\t\tconsole.error(\"Timer-card: Cannot toggle power. Entities not loaded or services unavailable.\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tconst switchId = this._effectiveSwitchEntity!;\r\n\t\tconst sensorId = this._effectiveSensorEntity!;\r\n\r\n\t\tconst timerSwitch = this.hass.states[switchId];\r\n\t\tif (!timerSwitch) {\r\n\t\t\t\tconsole.warn(`Timer-card: Switch entity '${switchId}' not found during toggle.`);\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst sensor = this.hass.states[sensorId];\r\n\t\tconst isTimerActive = sensor && sensor.attributes.timer_state === 'active';\r\n\r\n\t\tif (timerSwitch.state === 'on') {\r\n\t\t\t\tif (isTimerActive) {\r\n\t\t\t\t\t\tthis._cancelTimer();\r\n\t\t\t\t\t\tconsole.log(`Timer-card: Cancelling active timer for switch: ${switchId}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\t// Use backend service for manual turn off with notification\r\n\t\t\t\t\t\tthis.hass.callService(DOMAIN, \"manual_power_toggle\", { \r\n\t\t\t\t\t\t\t\tentry_id: this._getEntryId(), \r\n\t\t\t\t\t\t\t\taction: \"turn_off\" \r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(`Timer-card: Manually turning off switch: ${switchId}`);\r\n\t\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Use backend service for manual turn on with notification  \r\n\t\t\tthis.hass.callService(DOMAIN, \"manual_power_toggle\", { \r\n\t\t\t\t\tentry_id: this._getEntryId(), \r\n\t\t\t\t\taction: \"turn_on\" \r\n\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tconsole.log(`Timer-card: Manually turning on switch: ${switchId}`);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.error(\"Timer-card: Error manually turning on switch:\", error);\r\n\t\t\t\t});\r\n\t\t\tthis._notificationSentForCurrentCycle = false;\r\n\t\t}\r\n\t}\r\n\r\n  _showMoreInfo(): void {\r\n    if (!this._entitiesLoaded || !this.hass) {\r\n        console.error(\"Timer-card: Cannot show more info. Entities not loaded.\");\r\n        return;\r\n    }\r\n    const sensorId = this._effectiveSensorEntity!;\r\n\r\n    const event = new CustomEvent(\"hass-more-info\", {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { entityId: sensorId }\r\n    });\r\n    this.dispatchEvent(event);\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    this._determineEffectiveEntities();\r\n    this._updateLiveRuntime();\r\n    this._updateCountdown();\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    super.disconnectedCallback();\r\n    this._stopCountdown();\r\n    this._stopLiveRuntime();\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\r\n    if (changedProperties.has(\"hass\") || changedProperties.has(\"_config\")) {\r\n        this._determineEffectiveEntities();\r\n        this._updateLiveRuntime();\r\n        this._updateCountdown();\r\n    }\r\n  }\r\n\r\n  _updateLiveRuntime(): void {\r\n    this._liveRuntimeSeconds = 0;\r\n  }\r\n\r\n  _stopLiveRuntime(): void {\r\n    this._liveRuntimeSeconds = 0;\r\n  }\r\n\r\n\t_updateCountdown(): void {\r\n\t\tif (!this._entitiesLoaded || !this.hass || !this.hass.states) {\r\n\t\t\tthis._stopCountdown();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst sensor = this.hass.states[this._effectiveSensorEntity!];\r\n\r\n\t\tif (!sensor || sensor.attributes.timer_state !== 'active') {\r\n\t\t\tthis._stopCountdown();\r\n\t\t\tthis._notificationSentForCurrentCycle = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this._countdownInterval) {\r\n\t\t\t\tconst rawFinish = sensor.attributes.timer_finishes_at;\r\n\t\t\t\tif (rawFinish === undefined) {\r\n\t\t\t\t\t\tconsole.warn(\"Timer-card: timer_finishes_at is undefined for active timer. Stopping countdown.\");\r\n\t\t\t\t\t\tthis._stopCountdown();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst finishesAt = new Date(rawFinish).getTime();\r\n\r\n\t\t\t\tconst update = () => {\r\n\t\t\t\t\tconst now = new Date().getTime();\r\n\t\t\t\t\tconst remaining = Math.max(0, Math.round((finishesAt - now) / 1000));\r\n\t\t\t\t\tthis._timeRemaining = `${Math.floor(remaining / 60).toString().padStart(2, '0')}:${(remaining % 60).toString().padStart(2, '0')}`;\r\n\r\n\t\t\t\t\tif (remaining === 0) {\r\n\t\t\t\t\t\t\tthis._stopCountdown();\r\n\t\t\t\t\t\t\t// Backend handles the timer completion notification automatically\r\n\t\t\t\t\t\t\tif (!this._notificationSentForCurrentCycle) {\r\n\t\t\t\t\t\t\t\t\tthis._notificationSentForCurrentCycle = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tthis._countdownInterval = window.setInterval(update, 500);\r\n\t\t\t\tupdate();\r\n\t\t}\r\n\t}\r\n\r\n  _stopCountdown(): void {\r\n    if (this._countdownInterval) {\r\n      window.clearInterval(this._countdownInterval);\r\n      this._countdownInterval = null;\r\n    }\r\n    this._timeRemaining = null;\r\n  }\r\n\r\n\t_hasOrphanedTimer(): { isOrphaned: boolean; duration?: number } {\r\n\t\tif (!this._entitiesLoaded || !this.hass || !this._effectiveSensorEntity) {\r\n\t\t\treturn { isOrphaned: false };\r\n\t\t}\r\n\r\n\t\tconst sensor = this.hass.states[this._effectiveSensorEntity];\r\n\t\tif (!sensor || sensor.attributes.timer_state !== 'active') {\r\n\t\t\treturn { isOrphaned: false };\r\n\t\t}\r\n\r\n\t\tconst activeDuration = sensor.attributes.timer_duration || 0;\r\n\t\tconst hasMatchingButton = this.buttons.includes(activeDuration);\r\n\r\n\t\treturn {\r\n\t\t\tisOrphaned: !hasMatchingButton,\r\n\t\t\tduration: activeDuration\r\n\t\t};\r\n\t}\r\n\r\n  render() {\r\n    let message: string | null = null;\r\n    let isWarning = false;\r\n\r\n    if (!this.hass) {\r\n        message = \"Home Assistant object (hass) not available. Card cannot load.\";\r\n        isWarning = true;\r\n    } else if (!this._entitiesLoaded) {\r\n        if (this._config?.timer_instance_id) {\r\n            const configuredSensorState = Object.values(this.hass.states).find(\r\n                (state: HAState) => state.attributes.entry_id === this._config!.timer_instance_id && state.entity_id.startsWith('sensor.')\r\n            ) as HAState | undefined;\r\n\r\n            if (!configuredSensorState) {\r\n                message = `Timer Control Instance '${this._config.timer_instance_id}' not found. Please select a valid instance in the card editor.`;\r\n                isWarning = true;\r\n            } else if (typeof configuredSensorState.attributes.switch_entity_id !== 'string' || !(configuredSensorState.attributes.switch_entity_id && this.hass.states[configuredSensorState.attributes.switch_entity_id])) {\r\n                message = `Timer Control Instance '${this._config.timer_instance_id}' linked to missing or invalid switch '${configuredSensorState.attributes.switch_entity_id}'. Please check instance configuration.`;\r\n                isWarning = true;\r\n            } else {\r\n                message = \"Loading Timer Control Card. Please wait...\";\r\n                isWarning = false;\r\n            }\r\n        } else if (this._config?.sensor_entity) {\r\n            const configuredSensorState = this.hass.states[this._config.sensor_entity];\r\n            if (!configuredSensorState) {\r\n                message = `Configured Timer Control Sensor '${this._config.sensor_entity}' not found. Please select a valid instance in the card editor.`;\r\n                isWarning = true;\r\n            } else if (typeof configuredSensorState.attributes.switch_entity_id !== 'string' || !(configuredSensorState.attributes.switch_entity_id && this.hass.states[configuredSensorState.attributes.switch_entity_id])) {\r\n                message = `Configured Timer Control Sensor '${this._config.sensor_entity}' is invalid or its linked switch '${configuredSensorState.attributes.switch_entity_id}' is missing. Please select a valid instance.`;\r\n                isWarning = true;\r\n            } else {\r\n                message = \"Loading Timer Control Card. Please wait...\";\r\n                isWarning = false;\r\n            }\r\n        } else {\r\n            message = \"Select a Timer Control Instance from the dropdown in the card editor to link this card.\";\r\n            isWarning = false;\r\n        }\r\n    }\r\n\r\n    if (message) {\r\n      return html`<ha-card><div class=\"${isWarning ? 'warning' : 'placeholder'}\">${message}</div></ha-card>`;\r\n    }\r\n\r\n    const timerSwitch = this.hass!.states[this._effectiveSwitchEntity!];\r\n    const sensor = this.hass!.states[this._effectiveSensorEntity!];\r\n\r\n    const isOn = timerSwitch.state === 'on';\r\n    const isTimerActive = sensor.attributes.timer_state === 'active';\r\n    const timerDurationInMinutes = sensor.attributes.timer_duration || 0;\r\n    const isManualOn = isOn && !isTimerActive;\r\n\r\n    const committedSeconds = parseFloat(sensor.state as string) || 0;\r\n\r\n    let totalSecondsForDisplay = committedSeconds;\r\n\r\n    // Format time based on show_seconds setting\r\n    let formattedTime: string;\r\n    let runtimeLabel: string;\r\n\r\n    if (this._config?.show_seconds) {\r\n      // Show full HH:MM:SS format\r\n      const totalSecondsInt = Math.floor(totalSecondsForDisplay);\r\n      const hours = Math.floor(totalSecondsInt / 3600);\r\n      const minutes = Math.floor((totalSecondsInt % 3600) / 60);\r\n      const seconds = totalSecondsInt % 60;\r\n      formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n      runtimeLabel = \"Daily Usage (hh:mm:ss)\";\r\n    } else {\r\n      // Show HH:MM format (original behavior)\r\n      const totalMinutes = Math.floor(totalSecondsForDisplay / 60);\r\n      const hours = Math.floor(totalMinutes / 60);\r\n      const minutes = totalMinutes % 60;\r\n      formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n      runtimeLabel = \"Daily Usage (hh:mm)\";\r\n    }\r\n\r\n    const watchdogMessage = sensor.attributes.watchdog_message;\r\n\t\tconst orphanedTimer = this._hasOrphanedTimer();\r\n\r\n    return html`\r\n      <ha-card>\r\n        <div class=\"card-header\">\r\n            <div class=\"card-title\">${this._config?.card_title || ''}</div>\r\n            <a href=\"${REPO_URL}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"repo-link\" title=\"Help\">\r\n                <ha-icon icon=\"mdi:help-circle-outline\"></ha-icon>\r\n            </a>\r\n        </div>\r\n\r\n        ${watchdogMessage ? html`\r\n          <div class=\"status-message warning watchdog-banner\">\r\n            <ha-icon icon=\"mdi:alert-outline\" class=\"status-icon\"></ha-icon>\r\n            <span class=\"status-text\">${watchdogMessage}</span>\r\n          </div>\r\n        ` : ''}\r\n\t\t\t\t${orphanedTimer.isOrphaned ? html`\r\n\t\t\t\t\t<div class=\"status-message warning\">\r\n\t\t\t\t\t\t<ha-icon icon=\"mdi:timer-alert-outline\" class=\"status-icon\"></ha-icon>\r\n\t\t\t\t\t\t<span class=\"status-text\">\r\n\t\t\t\t\t\t\tActive ${orphanedTimer.duration}-minute timer has no corresponding button. \r\n\t\t\t\t\t\t\tUse the power button to cancel or wait for automatic completion.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t` : ''}\r\n        <div class=\"main-grid\">\r\n          <div class=\"button power-button ${isOn ? 'on' : ''}\" @click=${this._togglePower}><ha-icon icon=\"mdi:power\"></ha-icon></div>\r\n          <div class=\"button readonly\" @click=${this._showMoreInfo}>\r\n            <span class=\"daily-time-text ${this._config?.show_seconds ? 'with-seconds' : ''}\">${formattedTime}</span>\r\n            <span class=\"runtime-label\">${runtimeLabel}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-grid\">\r\n          ${this.buttons.map(minutes => {\r\n            const isActive = isTimerActive && timerDurationInMinutes === minutes;\r\n            const isDisabled = isManualOn || (isTimerActive && !isActive);\r\n            return html`\r\n              <div class=\"button timer-button ${isActive ? 'active' : ''} ${isDisabled ? 'disabled' : ''}\" @click=${() => { if (isActive) this._cancelTimer(); else if (!isDisabled) this._startTimer(minutes); }}>\r\n                ${isActive && this._timeRemaining ? html`<span class=\"countdown-text\">${this._timeRemaining}</span>` : html`<div class=\"timer-button-content\"><span class=\"timer-button-value\">${minutes}</span><span class=\"timer-button-unit\">Min</span></div>`}\r\n              </div>\r\n            `;\r\n          })}\r\n        </div>\r\n        ${this._validationMessages.length > 0 ? html`\r\n          <div class=\"status-message warning\">\r\n            <ha-icon icon=\"mdi:alert-outline\" class=\"status-icon\"></ha-icon>\r\n            <div class=\"status-text\">\r\n                ${this._validationMessages.map(msg => html`<div>${msg}</div>`)}\r\n            </div>\r\n          </div>\r\n        ` : ''}\r\n      </ha-card>\r\n    `;\r\n  }\r\n\r\n  static get styles() {\r\n    return cardStyles;\r\n  }\r\n}\r\ncustomElements.define(\"timer-card\", TimerCard);\r\n\r\nwindow.customCards = window.customCards || [];\r\nwindow.customCards.push({\r\n  type: \"timer-card\",\r\n  name: \"Simple Timer Card\",\r\n  description: \"A card for the Simple Timer integration.\",\r\n});","// timer-card-editor.styles.ts\r\n\r\nimport { css } from 'lit';\r\n\r\nexport const editorCardStyles = css`\r\n      .card-config-group {\r\n        padding: 16px;\r\n        background-color: var(--card-background-color);\r\n        border-top: 1px solid var(--divider-color);\r\n        margin-top: 16px;\r\n      }\r\n      h3 {\r\n        margin-top: 0;\r\n        margin-bottom: 16px;\r\n        font-size: 1.1em;\r\n        font-weight: normal;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .checkbox-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));\r\n        gap: 8px 16px;\r\n        margin-bottom: 16px;\r\n      }\r\n      @media (min-width: 400px) {\r\n        .checkbox-grid {\r\n          grid-template-columns: repeat(5, 1fr);\r\n        }\r\n      }\r\n      .checkbox-label {\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .checkbox-label input[type=\"checkbox\"] {\r\n        margin-right: 8px;\r\n        min-width: 20px;\r\n        min-height: 20px;\r\n      }\r\n      .timer-buttons-info {\r\n        padding: 12px;\r\n        background-color: var(--secondary-background-color);\r\n        border-radius: 8px;\r\n        border: 1px solid var(--divider-color);\r\n      }\r\n      .timer-buttons-info p {\r\n        margin: 4px 0;\r\n        font-size: 14px;\r\n        color: var(--primary-text-color);\r\n      }\r\n      .warning-text {\r\n        color: var(--warning-color);\r\n        font-weight: bold;\r\n      }\r\n      .info-text {\r\n        color: var(--primary-text-color);\r\n        font-style: italic;\r\n      }\r\n      \r\n      .card-config {\r\n        padding: 16px;\r\n      }\r\n      .config-row {\r\n        margin-bottom: 16px;\r\n      }\r\n      .config-row ha-textfield,\r\n      .config-row ha-select {\r\n        width: 100%;\r\n      }\r\n      .config-row ha-formfield {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n`;","// timer-card-editor.ts\r\n\r\nimport { LitElement, html } from 'lit';\r\nimport { editorCardStyles } from './timer-card-editor.styles';\r\n\r\n// Define necessary interfaces directly in this file for compilation robustness.\r\ninterface TimerCardConfig {\r\n  type: string;\r\n  timer_instance_id?: string | null;\r\n  entity?: string | null;\r\n  sensor_entity?: string | null;\r\n  timer_buttons: number[];\r\n  notification_entity?: string | null;\r\n  card_title?: string | null;\r\n  show_seconds?: boolean; // NEW: Option to show seconds in daily usage\r\n}\r\n\r\ninterface HAState {\r\n  entity_id: string;\r\n  state: string;\r\n  attributes: {\r\n    friendly_name?: string;\r\n    entry_id?: string;\r\n    switch_entity_id?: string;\r\n    instance_title?: string;\r\n    [key: string]: any;\r\n  };\r\n  last_changed: string;\r\n  last_updated: string;\r\n  context: {\r\n    id: string;\r\n    parent_id: string | null;\r\n    user_id: string | null;\r\n  };\r\n}\r\n\r\ninterface HAService {\r\n  description: string;\r\n  fields: {\r\n    [field: string]: {\r\n      description: string;\r\n      example: string;\r\n    };\r\n  };\r\n}\r\n\r\ninterface HomeAssistant {\r\n  states: {\r\n    [entityId: string]: HAState;\r\n  };\r\n  services: {\r\n    notify?: { [service: string]: HAService };\r\n    switch?: { [service: string]: HAService };\r\n    [domain: string]: { [service: string]: HAService } | undefined;\r\n  };\r\n  callService(domain: string, service: string, data?: Record<string, unknown>): Promise<void>;\r\n  callApi<T = unknown>(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, parameters?: Record<string, unknown>, headers?: Record<string, string>): Promise<T>;\r\n  config: {\r\n    components: {\r\n      [domain: string]: {\r\n        config_entries: { [entry_id: string]: unknown };\r\n      };\r\n    };\r\n    [key: string]: any;\r\n  };\r\n}\r\n\r\ninterface HAConfigEntry {\r\n  entry_id: string;\r\n  title: string;\r\n  domain: string;\r\n}\r\n\r\ninterface HAConfigEntriesByDomainResponse {\r\n  entry_by_domain: {\r\n    [domain: string]: HAConfigEntry[];\r\n  };\r\n}\r\n\r\nconst ATTR_INSTANCE_TITLE = \"instance_title\";\r\nconst DOMAIN = \"simple_timer\";\r\nconst DEFAULT_TIMER_BUTTONS = [15, 30, 60, 90, 120, 150]; // Default for new cards only\r\n\r\nclass TimerCardEditor extends LitElement {\r\n  static properties = {\r\n    hass: { type: Object },\r\n    _config: { type: Object },\r\n  };\r\n\r\n  hass?: HomeAssistant;\r\n  _config: TimerCardConfig;\r\n  _configFullyLoaded: boolean = false; // Track if we've received a complete config\r\n\r\n  private _timerInstancesOptions: Array<{ value: string; label: string }> = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this._config = {\r\n      type: \"custom:timer-card\",\r\n      timer_buttons: [...DEFAULT_TIMER_BUTTONS], // Use centralized default\r\n      notification_entity: null,\r\n      timer_instance_id: null,\r\n      card_title: null,\r\n      show_seconds: false\r\n    };\r\n  }\r\n\r\n  async _getSimpleTimerInstances(): Promise<Array<{ value: string; label: string }>> {\r\n    if (!this.hass || !this.hass.states) {\r\n      console.warn(\"TimerCardEditor: hass.states not available when trying to fetch instances from states.\");\r\n      return [];\r\n    }\r\n\r\n    const instancesMap = new Map<string, { value: string; label: string }>();\r\n\r\n    for (const entityId in this.hass.states) {\r\n      const state = this.hass.states[entityId];\r\n\r\n      // UPDATED: Look for sensors that have the required simple timer attributes\r\n      // The entity name format is now: \"[Instance Name] Runtime ([entry_id_short])\"\r\n      if (entityId.startsWith('sensor.') &&\r\n          entityId.includes('runtime') &&  // Runtime sensors contain 'runtime' in their ID\r\n          state.attributes.entry_id &&\r\n          typeof state.attributes.entry_id === 'string' &&\r\n          state.attributes.switch_entity_id &&\r\n          typeof state.attributes.switch_entity_id === 'string'\r\n         ) {\r\n        const entryId = state.attributes.entry_id;\r\n        const instanceTitle = state.attributes[ATTR_INSTANCE_TITLE];\r\n\r\n        let instanceLabel = `Timer Control (${entryId.substring(0, 8)})`;\r\n\r\n        console.debug(`TimerCardEditor: Processing sensor ${entityId} (Entry: ${entryId})`);\r\n        console.debug(`TimerCardEditor: Found raw attribute '${ATTR_INSTANCE_TITLE}': ${instanceTitle}`);\r\n        console.debug(`TimerCardEditor: Type of raw attribute: ${typeof instanceTitle}`);\r\n\r\n        if (instanceTitle && typeof instanceTitle === 'string' && instanceTitle.trim() !== '') {\r\n            instanceLabel = instanceTitle.trim();\r\n            console.debug(`TimerCardEditor: Using '${ATTR_INSTANCE_TITLE}' for label: \"${instanceLabel}\"`);\r\n        } else {\r\n            console.warn(`TimerCardEditor: Sensor '${entityId}' has no valid '${ATTR_INSTANCE_TITLE}' attribute. Falling back to entry ID based label: \"${instanceLabel}\".`);\r\n        }\r\n\r\n        if (!instancesMap.has(entryId)) {\r\n          instancesMap.set(entryId, { value: entryId, label: instanceLabel });\r\n          console.debug(`TimerCardEditor: Added instance: ${instanceLabel} (${entryId}) from sensor: ${entityId}`);\r\n        } else {\r\n            console.debug(`TimerCardEditor: Skipping duplicate entry_id: ${entryId}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const instances = Array.from(instancesMap.values());\r\n    instances.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n    if (instances.length === 0) {\r\n        console.info(`TimerCardEditor: No Simple Timer integration instances found by scanning hass.states.`);\r\n    } else {\r\n        console.info(\"TimerCardEditor: Found Simple Timer instances by scanning states:\", instances);\r\n    }\r\n    return instances;\r\n  }\r\n\r\n\t_getNotificationServiceTargets(): Array<{ value: string; label: string }> {\r\n\t\tif (!this.hass || !this.hass.services) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst targets: Array<{ value: string; label: string }> = [];\r\n\r\n\t\t// Get all notify.* services\r\n\t\tif (this.hass.services.notify) {\r\n\t\t\tfor (const serviceName in this.hass.services.notify) {\r\n\t\t\t\tif (serviceName !== \"send\" && !serviceName.includes(\"_all\") && !serviceName.includes(\"_group\")) {\r\n\t\t\t\t\ttargets.push({ \r\n\t\t\t\t\t\tvalue: `notify.${serviceName}`, \r\n\t\t\t\t\t\tlabel: `notify.${serviceName}`\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get services from other domains that can send notifications\r\n\t\tfor (const domain in this.hass.services) {\r\n\t\t\tif (domain !== \"notify\") { // Skip notify since we handled it above\r\n\t\t\t\tconst domainServices = this.hass.services[domain];\r\n\t\t\t\tfor (const serviceName in domainServices) {\r\n\t\t\t\t\t// Look for services that are commonly used for notifications\r\n\t\t\t\t\tif (serviceName.includes(\"send\") || \r\n\t\t\t\t\t\t\tserviceName.includes(\"message\") || \r\n\t\t\t\t\t\t\tserviceName.includes(\"notify\") ||\r\n\t\t\t\t\t\t\tdomain.includes(\"telegram\") ||\r\n\t\t\t\t\t\t\tdomain.includes(\"mobile_app\") ||\r\n\t\t\t\t\t\t\tdomain.includes(\"discord\") ||\r\n\t\t\t\t\t\t\tdomain.includes(\"slack\")) {\r\n\t\t\t\t\t\tconst fullService = `${domain}.${serviceName}`;\r\n\t\t\t\t\t\ttargets.push({ \r\n\t\t\t\t\t\t\tvalue: fullService, \r\n\t\t\t\t\t\t\tlabel: fullService  // Show technical name like telegram_bot.send_message\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttargets.sort((a, b) => a.label.localeCompare(b.label));\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\t_getValidatedTimerButtons(configButtons: any): number[] {\r\n    if (Array.isArray(configButtons)) {\r\n        const validatedButtons: number[] = [];\r\n        const seen = new Set<number>();\r\n\r\n        configButtons.forEach(val => {\r\n            const numVal = Number(val);\r\n            if (Number.isInteger(numVal) && numVal > 0 && numVal <= 1000) {\r\n                if (!seen.has(numVal)) {\r\n                    validatedButtons.push(numVal);\r\n                    seen.add(numVal);\r\n                }\r\n            }\r\n        });\r\n\r\n        validatedButtons.sort((a, b) => a - b);\r\n        console.log(`TimerCardEditor: Using ${validatedButtons.length} timer buttons from config:`, validatedButtons);\r\n        return validatedButtons;\r\n    }\r\n\r\n    if (configButtons === undefined || configButtons === null) {\r\n        console.log(`TimerCardEditor: No timer_buttons in config, using empty array.`);\r\n        return [];\r\n    }\r\n\r\n    console.warn(`TimerCardEditor: Invalid timer_buttons type (${typeof configButtons}):`, configButtons, `- using empty array`);\r\n    return [];\r\n\t}\r\n\r\n  async setConfig(cfg: TimerCardConfig): Promise<void> {\r\n    console.log(`TimerCardEditor: setConfig called with:`, cfg);\r\n    const oldConfig = { ...this._config };\r\n\r\n    const timerButtonsToSet = this._getValidatedTimerButtons(cfg.timer_buttons);\r\n\r\n    const newConfigData: TimerCardConfig = {\r\n      type: cfg.type || \"custom:timer-card\",\r\n      timer_buttons: timerButtonsToSet,\r\n      card_title: cfg.card_title || null,\r\n      show_seconds: cfg.show_seconds || false\r\n    };\r\n\r\n    if (cfg.timer_instance_id) {\r\n        newConfigData.timer_instance_id = cfg.timer_instance_id;\r\n        console.info(`TimerCardEditor: setConfig PRESERVING existing timer_instance_id: '${cfg.timer_instance_id}'`);\r\n    } else {\r\n        console.info(`TimerCardEditor: setConfig - no timer_instance_id in config, will remain unset`);\r\n    }\r\n\r\n    if (cfg.entity) newConfigData.entity = cfg.entity;\r\n    if (cfg.sensor_entity) newConfigData.sensor_entity = cfg.sensor_entity;\r\n    if (cfg.notification_entity) newConfigData.notification_entity = cfg.notification_entity;\r\n\r\n    this._config = newConfigData;\r\n    this._configFullyLoaded = true;\r\n    \r\n    console.log(`TimerCardEditor: setConfig result:`, this._config);\r\n    \r\n    if (JSON.stringify(oldConfig) !== JSON.stringify(this._config)) {\r\n        console.log(`TimerCardEditor: Config changed, dispatching config-changed event`);\r\n        this.dispatchEvent(\r\n            new CustomEvent(\"config-changed\", { detail: { config: this._config } })\r\n        );\r\n    } else {\r\n        console.log(`TimerCardEditor: Config unchanged, not dispatching event`);\r\n    }\r\n    \r\n    this.requestUpdate();\r\n  }\r\n\r\n  connectedCallback() {\r\n      super.connectedCallback();\r\n      if (this.hass) {\r\n          this._fetchTimerInstances();\r\n      } else {\r\n          console.warn(\"TimerCardEditor: hass not available on connectedCallback. Deferring instance fetch.\");\r\n      }\r\n  }\r\n\r\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\r\n      super.updated(changedProperties);\r\n      if (changedProperties.has(\"hass\") && this.hass) {\r\n          if ((changedProperties.get(\"hass\") as any)?.states !== this.hass.states || this._timerInstancesOptions.length === 0) {\r\n               console.log(\"TimerCardEditor: hass.states changed or instances not yet fetched, re-fetching instances.\");\r\n               this._fetchTimerInstances();\r\n          }\r\n      }\r\n  }\r\n\r\n  async _fetchTimerInstances() {\r\n      if (this.hass) {\r\n          console.log(`TimerCardEditor: _fetchTimerInstances called. Config loaded: ${this._configFullyLoaded}, Current config timer_instance_id: '${this._config?.timer_instance_id}'`);\r\n          \r\n          this._timerInstancesOptions = await this._getSimpleTimerInstances();\r\n          console.log(`TimerCardEditor: Found ${this._timerInstancesOptions.length} instances:`, this._timerInstancesOptions);\r\n          \r\n          if (!this._configFullyLoaded) {\r\n              console.info(`TimerCardEditor: Config not fully loaded yet, skipping any auto-selection logic`);\r\n              this.requestUpdate();\r\n              return;\r\n          }\r\n          \r\n          // MODIFIED: Remove auto-selection logic completely\r\n          // Only validate that existing configured instances still exist\r\n          if (this._config?.timer_instance_id && this._timerInstancesOptions.length > 0) {\r\n              const currentInstanceExists = this._timerInstancesOptions.some(\r\n                  instance => instance.value === this._config!.timer_instance_id\r\n              );\r\n              \r\n              if (!currentInstanceExists) {\r\n                  console.warn(`TimerCardEditor: Previously configured instance '${this._config.timer_instance_id}' no longer exists. User will need to select a new instance.`);\r\n                  // Clear the invalid instance ID so user sees \"Please select an instance\"\r\n                  const updatedConfig: TimerCardConfig = {\r\n                      ...this._config,\r\n                      timer_instance_id: null\r\n                  };\r\n                  \r\n                  this._config = updatedConfig;\r\n                  this.dispatchEvent(\r\n                      new CustomEvent(\"config-changed\", {\r\n                          detail: { config: this._config },\r\n                          bubbles: true,\r\n                          composed: true,\r\n                      }),\r\n                  );\r\n              } else {\r\n                  console.info(`TimerCardEditor: PRESERVING existing valid instance: '${this._config.timer_instance_id}'`);\r\n              }\r\n          } else {\r\n              console.info(`TimerCardEditor: No timer_instance_id configured or no instances available. User must manually select.`);\r\n          }\r\n          \r\n          this.requestUpdate();\r\n      }\r\n  }\r\n\r\n  _allTimerOptions: number[] = [1, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180];\r\n\r\n  _handleTimerCheckboxChange(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const value = parseInt(inputElement.value);\r\n    const isChecked = inputElement.checked;\r\n    let currentButtons = Array.isArray(this._config?.timer_buttons) ? [...this._config!.timer_buttons] : [];\r\n\r\n    if (isChecked) {\r\n      if (!currentButtons.includes(value)) {\r\n        currentButtons.push(value);\r\n      }\r\n    } else {\r\n      currentButtons = currentButtons.filter(button => button !== value);\r\n    }\r\n\r\n    currentButtons.sort((a, b) => a - b);\r\n\r\n    const updatedConfig: TimerCardConfig = {\r\n        type: this._config!.type,\r\n        timer_buttons: currentButtons,\r\n        show_seconds: this._config!.show_seconds || false\r\n    };\r\n    if (this._config?.timer_instance_id) updatedConfig.timer_instance_id = this._config.timer_instance_id;\r\n    if (this._config?.entity) updatedConfig.entity = this._config.entity;\r\n    if (this._config?.sensor_entity) updatedConfig.sensor_entity = this._config.sensor_entity;\r\n    if (this._config?.notification_entity) updatedConfig.notification_entity = this._config.notification_entity;\r\n    if (this._config?.card_title) updatedConfig.card_title = this._config.card_title;\r\n\r\n    this._config = updatedConfig;\r\n    this.dispatchEvent(\r\n      new CustomEvent(\"config-changed\", {\r\n        detail: { config: this._config },\r\n        bubbles: true,\r\n        composed: true,\r\n      }),\r\n    );\r\n    this.requestUpdate();\r\n  }\r\n\r\n  render() {\r\n    if (!this.hass) return html``;\r\n\r\n    const timerInstances = this._timerInstancesOptions || [];\r\n    const notificationServiceTargets = this._getNotificationServiceTargets();\r\n\r\n    const instanceOptions = [{ value: \"\", label: \"None\" }];\r\n    \r\n    if (timerInstances.length > 0) {\r\n        instanceOptions.push(...timerInstances);\r\n    } else {\r\n        instanceOptions.push({ value: \"none_found\", label: \"No Simple Timer Instances Found\" });\r\n    }\r\n\r\n    const notificationOptions = [{ value: \"none_selected\", label: \"None\" }];\r\n    notificationServiceTargets.forEach(target => notificationOptions.push(target));\r\n\r\n    return html`\r\n      <div class=\"card-config\">\r\n        <div class=\"config-row\">\r\n          <ha-textfield\r\n            .label=${\"Card Title (optional)\"}\r\n            .value=${this._config?.card_title || \"\"}\r\n            .configValue=${\"card_title\"}\r\n            @input=${this._valueChanged}\r\n            .placeholder=${\"Optional title for the card\"}\r\n          ></ha-textfield>\r\n        </div>\r\n        \r\n        <div class=\"config-row\">\r\n          <ha-select\r\n            .label=${\"Select Simple Timer Instance\"}\r\n            .value=${this._config?.timer_instance_id || \"\"}\r\n            .configValue=${\"timer_instance_id\"}\r\n            @selected=${this._valueChanged}\r\n            @closed=${(ev) => ev.stopPropagation()}\r\n            fixedMenuPosition\r\n            naturalMenuWidth\r\n            required\r\n          >\r\n            ${instanceOptions.map(option => html`\r\n              <mwc-list-item .value=${option.value}>\r\n                ${option.label}\r\n              </mwc-list-item>\r\n            `)}\r\n          </ha-select>\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <ha-formfield .label=${\"Show Seconds in Daily Usage\"}>\r\n            <ha-switch\r\n              .checked=${this._config?.show_seconds || false}\r\n              .configValue=${\"show_seconds\"}\r\n              @change=${this._valueChanged}\r\n            ></ha-switch>\r\n          </ha-formfield>\r\n        </div>\r\n\r\n        <div class=\"config-row\">\r\n          <ha-select\r\n            .label=${\"Notification Service (optional)\"}\r\n            .value=${this._config?.notification_entity || \"none_selected\"}\r\n            .configValue=${\"notification_entity\"}\r\n            @selected=${this._valueChanged}\r\n            @closed=${(ev) => ev.stopPropagation()}\r\n            fixedMenuPosition\r\n            naturalMenuWidth\r\n          >\r\n            ${notificationOptions.map(option => html`\r\n              <mwc-list-item .value=${option.value}>\r\n                ${option.label}\r\n              </mwc-list-item>\r\n            `)}\r\n          </ha-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-config-group\">\r\n        <h3>Select your timers (Minutes)</h3>\r\n        <div class=\"checkbox-grid\">\r\n          ${this._allTimerOptions.map(value => html`\r\n            <label class=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"${value}\"\r\n                .checked=${Array.isArray(this._config?.timer_buttons) && this._config!.timer_buttons.includes(value)}\r\n                @change=${this._handleTimerCheckboxChange}\r\n              >\r\n              ${value}\r\n            </label>\r\n          `)}\r\n        </div>\r\n        <div class=\"timer-buttons-info\">\r\n          ${!this._config?.timer_buttons?.length ? html`\r\n            <p class=\"info-text\">ℹ️ No timer buttons selected. Only power toggle and daily usage will be shown.</p>\r\n          ` : ''}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  _valueChanged(ev: Event): void {\r\n    ev.stopPropagation();\r\n    const target = ev.target as any;\r\n    \r\n    if (!this._config || !target.configValue) {\r\n      return;\r\n    }\r\n\r\n    const configValue = target.configValue;\r\n    let value;\r\n    \r\n    if (target.checked !== undefined) {\r\n      value = target.checked;\r\n    } else if (target.selected !== undefined) {\r\n      value = target.value;\r\n    } else if (target.value !== undefined) {\r\n      value = target.value;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    const updatedConfig: TimerCardConfig = {\r\n        type: this._config.type || \"custom:timer-card\",\r\n        timer_buttons: this._config.timer_buttons,\r\n        show_seconds: this._config.show_seconds || false\r\n    };\r\n\r\n    // Handle specific field updates\r\n    if (configValue === \"card_title\") {\r\n        if (value && value !== '') {\r\n            updatedConfig.card_title = value;\r\n        } else {\r\n            delete updatedConfig.card_title;\r\n        }\r\n    } else if (configValue === \"timer_instance_id\") {\r\n        if (value && value !== \"none_found\" && value !== \"\") {\r\n            updatedConfig.timer_instance_id = value;\r\n        } else {\r\n            updatedConfig.timer_instance_id = null;\r\n        }\r\n    } else if (configValue === \"show_seconds\") {\r\n        updatedConfig.show_seconds = value;\r\n    } else if (configValue === \"notification_entity\") {\r\n        if (value && value !== \"none_selected\") {\r\n            updatedConfig.notification_entity = value;\r\n        } else {\r\n            delete updatedConfig.notification_entity;\r\n        }\r\n    }\r\n\r\n    // Preserve existing values\r\n    if (this._config.entity) updatedConfig.entity = this._config.entity;\r\n    if (this._config.sensor_entity) updatedConfig.sensor_entity = this._config.sensor_entity;\r\n    if (this._config.timer_instance_id && configValue !== \"timer_instance_id\") {\r\n        updatedConfig.timer_instance_id = this._config.timer_instance_id;\r\n    }\r\n    if (this._config.notification_entity && configValue !== \"notification_entity\") {\r\n        updatedConfig.notification_entity = this._config.notification_entity;\r\n    }\r\n    if (this._config.card_title && configValue !== \"card_title\") {\r\n        updatedConfig.card_title = this._config.card_title;\r\n    }\r\n\r\n    if (JSON.stringify(this._config) !== JSON.stringify(updatedConfig)) {\r\n        this._config = updatedConfig;\r\n        this.dispatchEvent(\r\n            new CustomEvent(\"config-changed\", {\r\n                detail: { config: this._config },\r\n                bubbles: true,\r\n                composed: true,\r\n            }),\r\n        );\r\n        this.requestUpdate();\r\n    }\r\n  }\r\n\r\n  static get styles() {\r\n    return editorCardStyles;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"timer-card-editor\", TimerCardEditor);"],"names":["t","globalThis","e","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","s","Symbol","o","WeakMap","n$2","constructor","this","_$cssResult$","Error","cssText","styleSheet","length","get","replaceSync","set","toString","i","reduce","n","c","cssRules","r","is","defineProperty","getOwnPropertyDescriptor","h","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","Object","a","trustedTypes","l","emptyScript","p","reactiveElementPolyfillSupport","d","u","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","b","attribute","type","String","converter","reflect","useDefault","hasChanged","metadata","litPropertyMetadata","y$1","HTMLElement","addInitializer","_$Ei","push","observedAttributes","finalize","_$Eh","keys","createProperty","state","hasOwnProperty","create","wrapped","elementProperties","noAccessor","getPropertyDescriptor","call","requestUpdate","configurable","enumerable","getPropertyOptions","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","forEach","addController","_$EO","add","renderRoot","isConnected","hostConnected","removeController","delete","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$ET","removeAttribute","_$Ej","hasAttribute","C","_$EP","has","_$Eq","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$EM","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","y","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","Math","random","toFixed","slice","createComment","v","_","m","RegExp","g","$","x","_$litType$","strings","values","T","for","E","A","createTreeWalker","P","V","lastIndex","exec","test","startsWith","N","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","index","name","ctor","H","I","L","k","tagName","append","data","indexOf","innerHTML","S","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","M","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","R","nextSibling","z","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","iterator","O","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","arguments","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","litHtmlPolyfillSupport","litHtmlVersions","renderOptions","_$Do","renderBefore","render","_$litPart$","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","litElementVersions","cardStyles","css","DOMAIN","DEFAULT_TIMER_BUTTONS","console","info","customElements","define","_countdownInterval","_liveRuntimeSeconds","_timeRemaining","buttons","_validationMessages","_notificationSentForCurrentCycle","_entitiesLoaded","_effectiveSwitchEntity","_effectiveSensorEntity","hass","_config","getConfigElement","resolve","then","timerCardEditor","getStubConfig","_hass","log","timer_instance_id","timer_buttons","card_title","show_seconds","setConfig","cfg","_getValidatedTimerButtons","entity","sensor_entity","notification_entity","configButtons","validatedTimerButtons","invalidValues","uniqueValues","duplicateValues","val","numVal","isInteger","messages","join","sort","warn","_determineEffectiveEntities","currentSwitch","currentSensor","entitiesAreValid","states","_a","targetEntryId","instanceSensor","filter","entityId","find","attributes","entry_id","switch_entity_id","_b","sensorState","_getEntryId","error","sensor","_startTimer","minutes","callService","entryId","switchId","entity_id","duration","catch","_cancelTimer","_togglePower","sensorId","timerSwitch","isTimerActive","timer_state","action","_showMoreInfo","event","CustomEvent","bubbles","composed","detail","dispatchEvent","_updateLiveRuntime","_updateCountdown","_stopCountdown","_stopLiveRuntime","changedProperties","rawFinish","timer_finishes_at","undefined","finishesAt","Date","getTime","now","remaining","max","round","floor","padStart","window","setInterval","clearInterval","_hasOrphanedTimer","isOrphaned","activeDuration","timer_duration","includes","message","isWarning","configuredSensorState","html","isOn","timerDurationInMinutes","isManualOn","formattedTime","runtimeLabel","totalSecondsForDisplay","parseFloat","_c","totalSecondsInt","hours","seconds","totalMinutes","watchdogMessage","watchdog_message","orphanedTimer","_d","_e","isActive","isDisabled","msg","customCards","description","editorCardStyles","ATTR_INSTANCE_TITLE","TimerCardEditor","_configFullyLoaded","_timerInstancesOptions","_allTimerOptions","_getSimpleTimerInstances","instancesMap","instanceTitle","instanceLabel","substring","debug","trim","value","label","instances","from","localeCompare","_getNotificationServiceTargets","services","targets","notify","serviceName","domain","domainServices","fullService","validatedButtons","seen","oldConfig","assign","timerButtonsToSet","newConfigData","config","_fetchTimerInstances","some","instance","updatedConfig","_handleTimerCheckboxChange","inputElement","target","parseInt","isChecked","checked","currentButtons","button","_f","timerInstances","notificationServiceTargets","instanceOptions","notificationOptions","_valueChanged","ev","stopPropagation","option","configValue","selected"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}